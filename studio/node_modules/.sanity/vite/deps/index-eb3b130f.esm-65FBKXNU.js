import {
  useDeskTool
} from "./chunk-UWD4REGL.js";
import {
  BackLink,
  Pane,
  PaneHeader,
  PaneHeaderActions,
  require_camelCase,
  require_isNumber,
  require_kebabCase,
  require_lib as require_lib2,
  usePane
} from "./chunk-43N6LBI4.js";
import {
  require_hashlru,
  require_json_inspector
} from "./chunk-6D7JOVKQ.js";
import {
  ArrowLeftIcon,
  Box,
  Button,
  require_find,
  require_isEqual,
  require_isString,
  require_lib,
  require_negate,
  require_omit,
  require_partition,
  require_pickBy,
  require_react_is,
  require_startCase,
  require_uniq,
  require_uniqBy,
  require_uniqueId,
  require_upperFirst,
  styled_components_browser_esm_default
} from "./chunk-XVQUQQRN.js";
import {
  require_jsx_runtime
} from "./chunk-S62HUBL3.js";
import {
  require_react
} from "./chunk-HAQZRA24.js";
import {
  __toESM
} from "./chunk-S5KM4IGW.js";

// node_modules/sanity/lib/_chunks/index-eb3b130f.esm.js
var import_jsx_runtime = __toESM(require_jsx_runtime());
var import_react = __toESM(require_react());
var import_react_is = __toESM(require_react_is());
var import_omit = __toESM(require_omit());
var import_isNumber = __toESM(require_isNumber());
var import_isString = __toESM(require_isString());
var import_react_copy_to_clipboard = __toESM(require_lib2());
var import_partition = __toESM(require_partition());
var import_uniqBy = __toESM(require_uniqBy());
var import_camelCase = __toESM(require_camelCase());
var import_uniq = __toESM(require_uniq());
var import_kebabCase = __toESM(require_kebabCase());
var import_pickBy = __toESM(require_pickBy());
var import_find = __toESM(require_find());
var import_uniqueId = __toESM(require_uniqueId());
var import_startCase = __toESM(require_startCase());
var import_isEqual = __toESM(require_isEqual());
var import_is_hotkey = __toESM(require_lib());
var import_upperFirst = __toESM(require_upperFirst());
var import_react_json_inspector = __toESM(require_json_inspector());
var import_hashlru = __toESM(require_hashlru());
var import_negate = __toESM(require_negate());
var _excluded = ["index", "pane", "paneKey"];
var _excluded2 = ["child", "component", "menuItems", "menuItemGroups", "title", "type"];
var _templateObject;
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    enumerableOnly && (symbols = symbols.filter(function(sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    })), keys.push.apply(keys, symbols);
  }
  return keys;
}
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = null != arguments[i] ? arguments[i] : {};
    i % 2 ? ownKeys(Object(source), true).forEach(function(key) {
      _defineProperty(target, key, source[key]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _objectWithoutProperties(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _taggedTemplateLiteral(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } }));
}
function UserComponentPaneHeader(props) {
  const {
    actionHandlers,
    index,
    menuItems,
    menuItemGroups,
    title
  } = props;
  const {
    features
  } = useDeskTool();
  if (!(menuItems == null ? void 0 : menuItems.length) && !title) {
    return null;
  }
  return (0, import_jsx_runtime.jsx)(PaneHeader, {
    actions: (0, import_jsx_runtime.jsx)(PaneHeaderActions, {
      menuItems,
      menuItemGroups,
      actionHandlers
    }),
    backButton: features.backButton && index > 0 && (0, import_jsx_runtime.jsx)(Button, {
      as: BackLink,
      "data-as": "a",
      icon: ArrowLeftIcon,
      mode: "bleed"
    }),
    title
  });
}
var Root = styled_components_browser_esm_default(Box)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  position: relative;\n"])));
function UserComponentPaneContent(props) {
  const {
    children
  } = props;
  const {
    collapsed
  } = usePane();
  return (0, import_jsx_runtime.jsx)(Root, {
    hidden: collapsed,
    height: "fill",
    overflow: "auto",
    children
  });
}
function UserComponentPane(props) {
  const {
    index,
    pane,
    paneKey
  } = props, restProps = _objectWithoutProperties(props, _excluded);
  const {
    child,
    component,
    menuItems,
    menuItemGroups,
    title = "",
    type: _unused
  } = pane, restPane = _objectWithoutProperties(pane, _excluded2);
  const [ref, setRef] = (0, import_react.useState)(null);
  return (0, import_jsx_runtime.jsxs)(Pane, {
    id: paneKey,
    minWidth: 320,
    selected: restProps.isSelected,
    children: [(0, import_jsx_runtime.jsx)(UserComponentPaneHeader, {
      actionHandlers: ref == null ? void 0 : ref.actionHandlers,
      index,
      menuItems,
      menuItemGroups,
      title
    }), (0, import_jsx_runtime.jsxs)(UserComponentPaneContent, {
      children: [(0, import_react_is.isValidElementType)(component) && (0, import_react.createElement)(component, _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, restProps), restPane), {
        ref: setRef
      }), {}, {
        child,
        paneKey
      })), (0, import_react.isValidElement)(component) && component]
    })]
  });
}
export {
  UserComponentPane as default
};
//# sourceMappingURL=index-eb3b130f.esm-65FBKXNU.js.map
