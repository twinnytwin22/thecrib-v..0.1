{"version":3,"file":"SanityVision-21db2d68.js","sources":["../../src/apiVersions.ts","../../src/components/DelayedSpinner.tsx","../../src/codemirror/extensions.ts","../../src/codemirror/useCodemirrorTheme.ts","../../src/codemirror/VisionCodeMirror.styled.tsx","../../src/codemirror/VisionCodeMirror.tsx","../../src/util/isPlainObject.ts","../../src/util/localStorage.ts","../../src/util/parseApiQueryString.ts","../../src/util/validateApiVersion.ts","../../src/util/prefixApiVersion.ts","../../src/util/tryParseParams.ts","../../src/util/encodeQueryString.ts","../../src/util/resizeObserver.ts","../../src/components/ParamsEditor.tsx","../../src/components/ResultView.styled.tsx","../../src/components/ResultView.tsx","../../src/components/QueryErrorDialog.styled.tsx","../../src/components/QueryErrorDetails.tsx","../../src/components/QueryErrorDialog.tsx","../../src/components/VisionGui.styled.tsx","../../src/components/VisionGui.tsx","../../src/hooks/useDatasets.ts","../../src/containers/VisionContainer.tsx","../../src/SanityVision.tsx"],"sourcesContent":["export const API_VERSIONS = ['v1', 'vX', 'v2021-03-25', 'v2021-10-21']\nexport const [DEFAULT_API_VERSION] = API_VERSIONS.slice(-1)\n","import React, {useEffect, useState} from 'react'\nimport {Spinner} from '@sanity/ui'\n\ninterface DelayedSpinnerProps {\n  delay?: number\n}\n\n// Waits for X ms before showing a spinner\nexport function DelayedSpinner(props: DelayedSpinnerProps) {\n  const [show, setShow] = useState(false)\n\n  useEffect(() => {\n    const timer = setTimeout(() => setShow(true), props.delay || 500)\n    return () => clearTimeout(timer)\n  }, [props.delay])\n\n  return show ? <Spinner muted size={4} /> : null\n}\n","import {history, defaultKeymap, historyKeymap} from '@codemirror/commands'\nimport {highlightSelectionMatches} from '@codemirror/search'\nimport {javascriptLanguage} from '@codemirror/lang-javascript'\nimport {closeBrackets} from '@codemirror/autocomplete'\nimport {\n  lineNumbers,\n  highlightActiveLineGutter,\n  highlightSpecialChars,\n  drawSelection,\n  highlightActiveLine,\n  keymap,\n} from '@codemirror/view'\nimport {\n  indentOnInput,\n  syntaxHighlighting,\n  defaultHighlightStyle,\n  bracketMatching,\n} from '@codemirror/language'\n\nexport const codemirrorExtensions = [\n  [javascriptLanguage],\n  lineNumbers(),\n  highlightActiveLine(),\n  highlightActiveLineGutter(),\n  highlightSelectionMatches(),\n  highlightSpecialChars(),\n  indentOnInput(),\n  bracketMatching(),\n  closeBrackets(),\n  history(),\n  drawSelection(),\n  syntaxHighlighting(defaultHighlightStyle, {fallback: true}),\n  keymap.of([defaultKeymap, historyKeymap].flat().filter(Boolean)),\n]\n","import {rem, Theme} from '@sanity/ui'\nimport {EditorView} from '@codemirror/view'\nimport {HighlightStyle, syntaxHighlighting} from '@codemirror/language'\nimport {useMemo} from 'react'\nimport {hues} from '@sanity/color'\nimport {tags as t} from '@lezer/highlight'\n\nexport function useCodemirrorTheme(theme: Theme) {\n  const cmTheme = useMemo(() => createTheme(theme), [theme])\n  const cmHighlight = useMemo(() => syntaxHighlighting(createHighlight(theme)), [theme])\n\n  return [cmTheme, cmHighlight]\n}\n\nfunction createTheme(theme: Theme) {\n  const {color, fonts} = theme.sanity\n  const card = color.card.enabled\n  const cursor = hues.blue[color.dark ? 400 : 500].hex\n  const selection = hues.gray[theme.sanity.color.dark ? 900 : 100].hex\n\n  return EditorView.theme(\n    {\n      '&': {\n        color: card.fg,\n        backgroundColor: card.bg,\n      },\n\n      '.cm-content': {\n        caretColor: cursor,\n      },\n\n      '.cm-editor': {\n        fontFamily: fonts.code.family,\n        fontSize: rem(fonts.code.sizes[1].fontSize),\n        lineHeight: 'inherit',\n      },\n\n      '.cm-cursor, .cm-dropCursor': {borderLeftColor: cursor},\n      '&.cm-focused .cm-selectionBackground, .cm-selectionBackground, .cm-content ::selection': {\n        backgroundColor: selection,\n      },\n\n      '.cm-panels': {backgroundColor: card.bg, color: card.fg},\n      '.cm-panels.cm-panels-top': {borderBottom: `2px solid ${card.border}`},\n      '.cm-panels.cm-panels-bottom': {borderTop: `2px solid ${card.border}`},\n    },\n    {dark: color.dark}\n  )\n}\n\nfunction createHighlight(theme: Theme) {\n  const c = theme.sanity.color.base\n  const s = theme.sanity.color.syntax\n  return HighlightStyle.define([\n    {tag: t.keyword, color: s.keyword},\n    {tag: [t.propertyName, t.name, t.deleted, t.character, t.macroName], color: s.property},\n    {tag: [t.function(t.variableName), t.labelName], color: s.function},\n    {tag: [t.color, t.constant(t.name), t.standard(t.name)], color: s.variable},\n    {tag: [t.definition(t.name), t.separator], color: s.constant},\n    {\n      tag: [\n        t.typeName,\n        t.className,\n        t.number,\n        t.changed,\n        t.annotation,\n        t.modifier,\n        t.self,\n        t.namespace,\n      ],\n      color: s.number,\n    },\n    {\n      tag: [t.operator, t.operatorKeyword, t.url, t.escape, t.regexp, t.link, t.special(t.string)],\n      color: s.operator,\n    },\n    {tag: [t.meta, t.comment], color: s.comment},\n    {tag: t.strong, fontWeight: 'bold'},\n    {tag: t.emphasis, fontStyle: 'italic'},\n    {tag: t.strikethrough, textDecoration: 'line-through'},\n    {tag: t.heading, fontWeight: 'bold', color: s.property},\n    {tag: [t.atom, t.bool, t.special(t.variableName)], color: s.boolean},\n    {tag: [t.processingInstruction, t.string, t.inserted], color: s.string},\n    {tag: t.invalid, color: c.fg},\n  ])\n}\n","import {rem} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const EditorRoot = styled.div`\n  width: 100%;\n  box-sizing: border-box;\n  height: 100%;\n  overflow: hidden;\n  position: relative;\n  display: flex;\n\n  & .cm-theme {\n    width: 100%;\n  }\n\n  & .cm-editor {\n    height: 100%;\n\n    font-size: 16px;\n    line-height: 21px;\n  }\n\n  & .cm-line {\n    padding-left: ${({theme}) => rem(theme.sanity.space[3])};\n  }\n\n  & .cm-content {\n    border-right-width: ${({theme}) => rem(theme.sanity.space[4])} !important;\n    padding-top: ${({theme}) => rem(theme.sanity.space[5])};\n  }\n`\n","import React from 'react'\nimport {useTheme} from '@sanity/ui'\nimport CodeMirror, {ReactCodeMirrorProps} from '@uiw/react-codemirror'\nimport {codemirrorExtensions} from './extensions'\nimport {useCodemirrorTheme} from './useCodemirrorTheme'\nimport {EditorRoot} from './VisionCodeMirror.styled'\n\nexport function VisionCodeMirror(\n  props: Omit<ReactCodeMirrorProps, 'basicSetup' | 'theme' | 'extensions'>\n) {\n  const sanityTheme = useTheme()\n  const theme = useCodemirrorTheme(sanityTheme)\n\n  return (\n    <EditorRoot>\n      <CodeMirror basicSetup={false} theme={theme} extensions={codemirrorExtensions} {...props} />\n    </EditorRoot>\n  )\n}\n","export function isPlainObject(obj: unknown): obj is Record<string, unknown> {\n  return (\n    !!obj && typeof obj === 'object' && Object.prototype.toString.call(obj) === '[object Object]'\n  )\n}\n","import {isPlainObject} from './isPlainObject'\n\nconst hasLocalStorage = supportsLocalStorage()\n\nexport interface LocalStorageish {\n  get: <T>(key: string, defaultVal: T) => T\n  set: <T>(key: string, value: T) => T\n  merge: <T>(props: T) => T\n}\n\nexport function getLocalStorage(namespace: string): LocalStorageish {\n  const storageKey = `sanityVision:${namespace}`\n  let loadedState: Record<string, unknown> | null = null\n\n  return {get, set, merge}\n\n  function get<T>(key: string, defaultVal: T): T {\n    const state = ensureState()\n    return typeof state[key] === 'undefined' ? defaultVal : (state[key] as T)\n  }\n\n  function set<T>(key: string, value: T): T {\n    const state = ensureState()\n    state[key] = value\n    localStorage.setItem(storageKey, JSON.stringify(loadedState))\n    return value\n  }\n\n  function merge<T>(props: T): T {\n    const state = {...ensureState(), ...props}\n    localStorage.setItem(storageKey, JSON.stringify(state))\n    return state\n  }\n\n  function ensureState(): Record<string, unknown> {\n    if (loadedState === null) {\n      loadedState = loadState()\n    }\n\n    return loadedState\n  }\n\n  function loadState() {\n    if (!hasLocalStorage) {\n      return {}\n    }\n\n    try {\n      const stored = JSON.parse(localStorage.getItem(storageKey) || '{}')\n      return isPlainObject(stored) ? stored : {}\n    } catch (err) {\n      return {}\n    }\n  }\n}\n\nfunction supportsLocalStorage() {\n  const mod = 'lsCheck'\n  try {\n    localStorage.setItem(mod, mod)\n    localStorage.removeItem(mod)\n    return true\n  } catch (err) {\n    return false\n  }\n}\n","export interface ParsedApiQueryString {\n  query: string\n  params: Record<string, unknown>\n}\n\nexport function parseApiQueryString(qs: URLSearchParams): ParsedApiQueryString {\n  const params: Record<string, unknown> = {}\n  for (const [key, value] of qs.entries()) {\n    if (key[0] === '$') {\n      params[key.slice(1)] = JSON.parse(value)\n    }\n  }\n\n  return {query: qs.get('query') || '', params}\n}\n","export function validateApiVersion(apiVersion: string): boolean {\n  const parseableApiVersion = apiVersion.replace(/^v/, '').trim().toUpperCase()\n\n  const isValidApiVersion =\n    parseableApiVersion.length > 0 &&\n    (parseableApiVersion === 'X' ||\n      (/^\\d{4}-\\d{2}-\\d{2}$/.test(parseableApiVersion) && !isNaN(Date.parse(parseableApiVersion))))\n\n  return isValidApiVersion\n}\n","export function prefixApiVersion(version: string): string {\n  if (version[0] !== 'v' && version !== 'other') {\n    return `v${version}`\n  }\n\n  return version\n}\n","import JSON5 from 'json5'\n\nexport function tryParseParams(val: string): Record<string, unknown> | Error {\n  try {\n    const parsed = val ? JSON5.parse(val) : {}\n    return typeof parsed === 'object' && parsed && !Array.isArray(parsed) ? parsed : {}\n  } catch (err) {\n    // JSON5 always prefixes the error message with JSON5:, so we remove it\n    // to clean up the error tooltip\n    err.message = `Parameters are not valid JSON:\\n\\n${err.message.replace('JSON5:', '')}`\n    return err\n  }\n}\n","const enc = encodeURIComponent\n\nexport function encodeQueryString(query: string, params: Record<string, unknown> = {}): string {\n  return Object.keys(params).reduce(\n    (qs, param) => `${qs}&${enc(`$${param}`)}=${enc(JSON.stringify(params[param]))}`,\n    `?query=${enc(query)}`\n  )\n}\n","import {ResizeObserver as ResizeObserverPolyfill} from '@juggle/resize-observer'\n\nexport const RO = typeof document === 'undefined' ? ResizeObserverPolyfill : window.ResizeObserver\n\nexport {RO as ResizeObserver}\n","import React, {useCallback, useEffect, useMemo, useState} from 'react'\nimport {debounce} from 'lodash'\nimport {tryParseParams} from '../util/tryParseParams'\nimport {VisionCodeMirror} from '../codemirror/VisionCodeMirror'\n\nconst defaultValue = `{\\n  \\n}`\n\nexport interface ParamsEditorChangeEvent {\n  parsed: Record<string, unknown>\n  raw: string\n  valid: boolean\n  error: string | undefined\n}\n\nexport interface ParamsEditorProps {\n  value: string\n  onChange: (changeEvt: ParamsEditorChangeEvent) => void\n}\n\nexport interface ParamsEditorChange {\n  valid: boolean\n}\n\nexport function ParamsEditor(props: ParamsEditorProps) {\n  const {onChange} = props\n  const {raw: value, error, parsed, valid} = eventFromValue(props.value)\n  const [isValid, setValid] = useState(valid)\n\n  // Emit onChange on very first render\n  useEffect(() => onChange({parsed, raw: value, valid: isValid, error}), [])\n\n  const handleChangeRaw = useCallback(\n    (newValue: string) => {\n      const event = eventFromValue(newValue)\n      setValid(event.valid)\n      onChange(event)\n    },\n    [onChange]\n  )\n\n  const handleChange = useMemo(() => debounce(handleChangeRaw, 333), [handleChangeRaw])\n  return <VisionCodeMirror value={props.value || defaultValue} onChange={handleChange} />\n}\n\nfunction eventFromValue(value: string): ParamsEditorChangeEvent {\n  const parsedParams = tryParseParams(value)\n  const params = parsedParams instanceof Error ? {} : parsedParams\n  const validationError = parsedParams instanceof Error ? parsedParams.message : undefined\n  const isValid = !validationError\n\n  return {\n    parsed: params,\n    raw: value,\n    valid: isValid,\n    error: validationError,\n  }\n}\n","import {rem, Theme} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\n\nexport const ResultViewWrapper = styled.div(({theme}: {theme: Theme}) => {\n  const {color, fonts, space} = theme.sanity\n\n  return css`\n    & .json-inspector,\n    & .json-inspector .json-inspector__selection {\n      font-family: ${fonts.code.family};\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n      color: var(--card-code-fg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf {\n      padding-left: ${rem(space[4])};\n    }\n\n    & .json-inspector .json-inspector__leaf.json-inspector__leaf_root {\n      padding-top: ${rem(space[0])};\n      padding-left: 0;\n    }\n\n    & .json-inspector > .json-inspector__leaf_root > .json-inspector__line > .json-inspector__key {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__line {\n      display: block;\n      position: relative;\n      cursor: default;\n    }\n\n    & .json-inspector .json-inspector__line::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: -200px;\n      right: -50px;\n      bottom: 0;\n      z-index: -1;\n      pointer-events: none;\n    }\n\n    & .json-inspector .json-inspector__line:hover::after {\n      background: var(--card-code-bg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line {\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line::before {\n      content: '▸ ';\n      margin-left: calc(0px - ${rem(space[4])});\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    &\n      .json-inspector\n      .json-inspector__leaf_expanded.json-inspector__leaf_composite\n      > .json-inspector__line::before {\n      content: '▾ ';\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    & .json-inspector .json-inspector__radio,\n    & .json-inspector .json-inspector__flatpath {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__value {\n      margin-left: ${rem(space[4] / 2)};\n    }\n\n    &\n      .json-inspector\n      > .json-inspector__leaf_root\n      > .json-inspector__line\n      > .json-inspector__key\n      + .json-inspector__value {\n      margin: 0;\n    }\n\n    & .json-inspector .json-inspector__key {\n      color: ${color.syntax.property};\n    }\n\n    & .json-inspector .json-inspector__value_helper,\n    & .json-inspector .json-inspector__value_null {\n      color: ${color.syntax.constant};\n    }\n\n    & .json-inspector .json-inspector__not-found {\n      padding-top: ${rem(space[2])};\n    }\n\n    & .json-inspector .json-inspector__value_string {\n      color: ${color.syntax.string};\n      word-break: break-word;\n    }\n\n    & .json-inspector .json-inspector__value_boolean {\n      color: ${color.syntax.boolean};\n    }\n\n    & .json-inspector .json-inspector__value_number {\n      color: ${color.syntax.number};\n    }\n\n    & .json-inspector .json-inspector__show-original {\n      display: inline-block;\n      padding: 0 6px;\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__show-original:hover {\n      color: inherit;\n    }\n\n    & .json-inspector .json-inspector__show-original::before {\n      content: '↔';\n    }\n\n    & .json-inspector .json-inspector__show-original:hover::after {\n      content: ' expand';\n    }\n  `\n})\n","import React from 'react'\nimport HLRU from 'hashlru'\nimport JSONInspector from '@rexxars/react-json-inspector'\nimport {Code} from '@sanity/ui'\nimport {ResultViewWrapper} from './ResultView.styled'\n\nconst lru = HLRU(50000)\n\nexport function ResultView(props: {data: unknown}) {\n  const {data} = props\n\n  if (isRecord(data) || Array.isArray(data)) {\n    return (\n      <ResultViewWrapper>\n        <JSONInspector\n          data={data}\n          search={false}\n          isExpanded={isExpanded}\n          onClick={toggleExpanded}\n        />\n      </ResultViewWrapper>\n    )\n  }\n\n  return <Code language=\"json\">{JSON.stringify(data)}</Code>\n}\n\nfunction isExpanded(keyPath: string, value: unknown): boolean {\n  const depthLimit = 4\n  const cached = lru.get(keyPath) as boolean | undefined\n\n  if (typeof cached === 'boolean') {\n    return cached\n  }\n\n  const segments = keyPath.split('.', depthLimit)\n  if (segments.length === depthLimit) {\n    return false\n  }\n\n  if (Array.isArray(value)) {\n    return true\n  }\n\n  return isRecord(value) && !segments.some((key) => isArrayKeyOverLimit(key))\n}\n\nfunction toggleExpanded(event: {path: string}): void {\n  const {path} = event\n  const current = lru.get(path)\n\n  if (current === undefined) {\n    // something is wrong\n    return\n  }\n\n  lru.set(path, !current)\n}\n\nfunction isRecord(value: unknown): value is Record<string, unknown> {\n  return value !== null && typeof value === 'object' && !Array.isArray(value)\n}\n\nconst numeric = /^\\d+$/\nfunction isArrayKeyOverLimit(segment: string, limit = 10) {\n  return numeric.test(segment) && parseInt(segment, 10) > limit\n}\n","import {Code} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const ErrorCode = styled(Code)`\n  color: ${({theme}) => theme.sanity.color.muted.critical.enabled.fg};\n`\n","import React from 'react'\nimport {Box} from '@sanity/ui'\nimport {ErrorCode} from './QueryErrorDialog.styled'\n\ninterface ContentLakeQueryError {\n  details: {\n    query: string\n    start: number\n    end: number\n\n    lineNumber?: number\n    column?: number\n  }\n}\n\nexport function QueryErrorDetails({error}: {error: ContentLakeQueryError | Error}) {\n  if (!('details' in error)) {\n    return null\n  }\n\n  const details = {...error.details, ...mapToLegacyDetails(error.details)}\n  if (!details.line) {\n    return null\n  }\n\n  return (\n    <div>\n      <ErrorCode size={1}>{`${details.line}\\n${dashLine(\n        details.column,\n        details.columnEnd\n      )}`}</ErrorCode>\n      <Box marginTop={4}>\n        <ErrorCode size={1}>{`Line:   ${details.lineNumber}\\nColumn: ${details.column}`}</ErrorCode>\n      </Box>\n    </div>\n  )\n}\n\nfunction mapToLegacyDetails(details: ContentLakeQueryError['details']) {\n  if (!details || typeof details.query !== 'string' || typeof details.start !== 'number') {\n    return {}\n  }\n\n  const {query, start, end} = details\n  const lineStart = query.slice(0, start).lastIndexOf('\\n') + 1\n  const lineNumber = (query.slice(0, lineStart).match(/\\n/g) || []).length\n  const line = query.slice(lineStart, query.indexOf('\\n', lineStart))\n  const column = start - lineStart\n  const columnEnd = typeof end === 'number' ? end - lineStart : undefined\n\n  return {line, lineNumber, column, columnEnd}\n}\n\nfunction dashLine(column: number, columnEnd: number | undefined): string {\n  const line = '-'.repeat(column)\n  const hats = `^`.repeat(columnEnd ? columnEnd - column : 1)\n  return `${line}${hats}`\n}\n","import React from 'react'\nimport {Stack} from '@sanity/ui'\nimport {QueryErrorDetails} from './QueryErrorDetails'\nimport {ErrorCode} from './QueryErrorDialog.styled'\n\nexport function QueryErrorDialog(props: {error: Error}) {\n  return (\n    <Stack space={5} marginTop={2}>\n      <ErrorCode size={1}>{props.error.message}</ErrorCode>\n      <QueryErrorDetails error={props.error} />\n    </Stack>\n  )\n}\n","import styled, {css} from 'styled-components'\nimport {Button, Card, Box, Flex, Label, Theme, rem} from '@sanity/ui'\n\nexport const Root = styled(Flex)`\n  .sidebarPanes .Pane {\n    overflow-y: auto;\n    overflow-x: hidden;\n  }\n\n  & .Resizer {\n    background: var(--card-border-color);\n    opacity: 1;\n    z-index: 1;\n    box-sizing: border-box;\n    background-clip: padding-box;\n    border: solid transparent;\n  }\n\n  & .Resizer:hover {\n    border-color: var(--card-shadow-ambient-color);\n  }\n\n  & .Resizer.horizontal {\n    height: 11px;\n    margin: -5px 0;\n    border-width: 5px 0;\n    cursor: row-resize;\n    width: 100%;\n    z-index: 4;\n  }\n\n  & .Resizer.vertical {\n    width: 11px;\n    margin: 0 -5px;\n    border-width: 0 5px;\n    cursor: col-resize;\n    z-index: 2; /* To prevent the resizer from being hidden behind CodeMirror scroll area */\n  }\n\n  .Resizer.disabled {\n    cursor: not-allowed;\n  }\n\n  .Resizer.disabled:hover {\n    border-color: transparent;\n  }\n`\n\nRoot.displayName = 'Root'\n\nexport const Header = styled(Card)`\n  border-bottom: 1px solid var(--card-border-color);\n`\n\nexport const StyledLabel = styled(Label)`\n  flex: 1;\n`\n\nexport const SplitpaneContainer = styled(Box)`\n  position: relative;\n`\n\nexport const QueryCopyLink = styled.a`\n  cursor: pointer;\n  margin-right: auto;\n`\n\nexport const InputBackgroundContainer = styled(Box)`\n  position: absolute;\n  top: 1rem;\n  left: 0;\n  padding: 0;\n  margin: 0;\n  z-index: 10;\n  right: 0;\n\n  ${StyledLabel} {\n    user-select: none;\n  }\n`\n\nexport const InputBackgroundContainerLeft = styled(InputBackgroundContainer)`\n  // This is so its aligned with the gutters of CodeMirror\n  left: 33px;\n`\n\nexport const InputContainer = styled(Card)`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  flex-direction: column;\n`\n\nexport const ResultOuterContainer = styled(Flex)`\n  height: 100%;\n`\n\nexport const ResultInnerContainer = styled(Box)`\n  position: relative;\n`\n\nexport const ResultContainer = styled(Card)<{$isInvalid: boolean}>`\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  max-width: 100%;\n\n  ${({$isInvalid}) =>\n    $isInvalid &&\n    css`\n      &:after {\n        background-color: var(--card-bg-color);\n        content: '';\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        width: 100%;\n      }\n    `}\n`\n\nexport const Result = styled(Box)`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  z-index: 20;\n`\n\nexport const TimingsFooter = styled(Box)`\n  border-top: 1px solid var(--card-border-color);\n`\n\nexport const TimingsCard = styled(Card)`\n  position: relative;\n`\n\nexport const TimingsContainer = styled(Box)`\n  width: 100%;\n  height: 100%;\n`\n\nexport const TimingsTextContainer = styled(Flex)`\n  height: 100%;\n  min-height: ${({theme}: {theme: Theme}) =>\n    rem(\n      theme.sanity.space[3] * 2 +\n        theme.sanity.fonts.text.sizes[2].lineHeight -\n        theme.sanity.fonts.text.sizes[2].ascenderHeight -\n        theme.sanity.fonts.text.sizes[2].descenderHeight\n    )};\n`\n\nexport const ControlsContainer = styled(Box)`\n  border-top: 1px solid var(--card-border-color);\n`\n\nexport const ButtonFullWidth = styled(Button)`\n  width: 100%;\n`\n","/* eslint-disable complexity */\nimport React, {ChangeEvent, type RefObject} from 'react'\nimport SplitPane from '@rexxars/react-split-pane'\nimport type {ListenEvent, MutationEvent, SanityClient} from '@sanity/client'\nimport {PlayIcon, StopIcon, CopyIcon, ErrorOutlineIcon} from '@sanity/icons'\nimport isHotkey from 'is-hotkey'\nimport {\n  Flex,\n  Card,\n  Stack,\n  Box,\n  Hotkeys,\n  Select,\n  Text,\n  TextInput,\n  Tooltip,\n  Grid,\n  Button,\n  ToastContextValue,\n} from '@sanity/ui'\nimport {VisionCodeMirror} from '../codemirror/VisionCodeMirror'\nimport {getLocalStorage, LocalStorageish} from '../util/localStorage'\nimport {parseApiQueryString, ParsedApiQueryString} from '../util/parseApiQueryString'\nimport {validateApiVersion} from '../util/validateApiVersion'\nimport {prefixApiVersion} from '../util/prefixApiVersion'\nimport {tryParseParams} from '../util/tryParseParams'\nimport {encodeQueryString} from '../util/encodeQueryString'\nimport {API_VERSIONS, DEFAULT_API_VERSION} from '../apiVersions'\nimport {ResizeObserver} from '../util/resizeObserver'\nimport type {VisionProps} from '../types'\nimport {DelayedSpinner} from './DelayedSpinner'\nimport {ParamsEditor, type ParamsEditorChangeEvent} from './ParamsEditor'\nimport {ResultView} from './ResultView'\nimport {QueryErrorDialog} from './QueryErrorDialog'\nimport {\n  Root,\n  Header,\n  SplitpaneContainer,\n  QueryCopyLink,\n  InputBackgroundContainer,\n  InputBackgroundContainerLeft,\n  InputContainer,\n  StyledLabel,\n  ResultOuterContainer,\n  ResultInnerContainer,\n  ResultContainer,\n  Result,\n  ControlsContainer,\n  ButtonFullWidth,\n  TimingsFooter,\n  TimingsCard,\n  TimingsTextContainer,\n} from './VisionGui.styled'\n\nfunction nodeContains(node: Node, other: EventTarget | Node | null): boolean {\n  if (!node || !other) {\n    return false\n  }\n\n  // eslint-disable-next-line no-bitwise\n  return node === other || !!(node.compareDocumentPosition(other as Node) & 16)\n}\n\nconst sanityUrl =\n  /\\.(?:api|apicdn)\\.sanity\\.io\\/(vx|v1|v\\d{4}-\\d\\d-\\d\\d)\\/.*?(?:query|listen)\\/(.*?)\\?(.*)/\nconst isRunHotkey = (event: KeyboardEvent) =>\n  isHotkey('ctrl+enter', event) || isHotkey('mod+enter', event)\n\ninterface PaneSizeOptions {\n  defaultSize: number\n  size?: number\n  allowResize: boolean\n  minSize: number\n  maxSize: number\n}\n\nfunction calculatePaneSizeOptions(rootHeight: number): PaneSizeOptions {\n  return {\n    defaultSize: rootHeight / 2,\n    size: rootHeight > 550 ? undefined : rootHeight * 0.4,\n    allowResize: rootHeight > 550,\n    minSize: Math.min(170, Math.max(170, rootHeight / 2)),\n    maxSize: rootHeight > 650 ? rootHeight * 0.7 : rootHeight * 0.6,\n  }\n}\n\ninterface Subscription {\n  unsubscribe: () => void\n}\n\ninterface VisionGuiProps extends VisionProps {\n  toast: ToastContextValue\n  datasets: string[]\n}\n\ninterface VisionGuiState {\n  // Selected options\n  dataset: string\n  apiVersion: string\n  customApiVersion: string | false\n\n  // Selected options validation state\n  isValidApiVersion: boolean\n\n  // URL used to execute query/listener\n  url?: string | undefined\n\n  // Inputs\n  query: string\n  rawParams: string\n\n  // Parsed input\n  params: Record<string, unknown> | Error | undefined\n  paramsError?: string | undefined\n  hasValidParams: boolean\n\n  // Query/listen result\n  queryResult?: unknown | undefined\n  listenMutations: MutationEvent[]\n  error?: Error | undefined\n\n  // Operation timings\n  queryTime?: number | undefined\n  e2eTime?: number | undefined\n\n  // Operation state, used to trigger re-renders (spinners etc)\n  queryInProgress: boolean\n  listenInProgress: boolean\n\n  // UI drawing state\n  paneSizeOptions: PaneSizeOptions\n}\n\nexport class VisionGui extends React.PureComponent<VisionGuiProps, VisionGuiState> {\n  _visionRoot: RefObject<HTMLDivElement>\n  _queryEditorContainer: RefObject<HTMLDivElement>\n  _paramsEditorContainer: RefObject<HTMLDivElement>\n  _operationUrlElement: RefObject<HTMLInputElement>\n  _customApiVersionElement: RefObject<HTMLInputElement>\n  _resizeListener: ResizeObserver | undefined\n  _querySubscription: Subscription | undefined\n  _listenSubscription: Subscription | undefined\n  _client: SanityClient\n  _localStorage: LocalStorageish\n\n  constructor(props: VisionGuiProps) {\n    super(props)\n\n    const {client, datasets, config} = props\n    this._localStorage = getLocalStorage(client.config().projectId || 'default')\n\n    const lastQuery = this._localStorage.get('query', '')\n    const lastParams = this._localStorage.get('params', '{\\n  \\n}')\n\n    const defaultDataset = config.defaultDataset || client.config().dataset || datasets[0]\n    const defaultApiVersion = prefixApiVersion(`${config.defaultApiVersion}`)\n\n    let dataset = this._localStorage.get('dataset', defaultDataset)\n    let apiVersion = this._localStorage.get('apiVersion', defaultApiVersion)\n    const customApiVersion = API_VERSIONS.includes(apiVersion) ? false : apiVersion\n\n    if (!datasets.includes(dataset)) {\n      dataset = datasets.includes(defaultDataset) ? defaultDataset : datasets[0]\n    }\n\n    if (!API_VERSIONS.includes(apiVersion)) {\n      apiVersion = DEFAULT_API_VERSION\n    }\n\n    this._visionRoot = React.createRef()\n    this._operationUrlElement = React.createRef()\n    this._queryEditorContainer = React.createRef()\n    this._paramsEditorContainer = React.createRef()\n    this._customApiVersionElement = React.createRef()\n\n    this._client = props.client.withConfig({\n      apiVersion: customApiVersion || apiVersion,\n      dataset,\n      allowReconfigure: true,\n    })\n\n    // Initial root height without header\n    const bodyHeight =\n      typeof window !== 'undefined' && typeof document !== 'undefined'\n        ? document.body.getBoundingClientRect().height - 60\n        : 0\n\n    const params = lastParams ? tryParseParams(lastParams) : undefined\n\n    this.state = {\n      // Selected options\n      dataset,\n      apiVersion,\n      customApiVersion,\n\n      // Selected options validation state\n      isValidApiVersion: customApiVersion ? validateApiVersion(customApiVersion) : false,\n\n      // Inputs\n      query: lastQuery,\n      rawParams: lastParams,\n\n      // Parsed input\n      params,\n      hasValidParams: !(params instanceof Error),\n\n      // Query/listen results\n      listenMutations: [],\n\n      // Operation state\n      queryInProgress: false,\n      listenInProgress: false,\n\n      // UI drawing state\n      paneSizeOptions: calculatePaneSizeOptions(bodyHeight),\n    }\n\n    this.handleChangeDataset = this.handleChangeDataset.bind(this)\n    this.handleChangeApiVersion = this.handleChangeApiVersion.bind(this)\n    this.handleCustomApiVersionChange = this.handleCustomApiVersionChange.bind(this)\n    this.handleListenExecution = this.handleListenExecution.bind(this)\n    this.handleListenerEvent = this.handleListenerEvent.bind(this)\n    this.handleQueryExecution = this.handleQueryExecution.bind(this)\n    this.handleQueryChange = this.handleQueryChange.bind(this)\n    this.handleParamsChange = this.handleParamsChange.bind(this)\n    this.handleCopyUrl = this.handleCopyUrl.bind(this)\n    this.handlePaste = this.handlePaste.bind(this)\n    this.handleKeyDown = this.handleKeyDown.bind(this)\n    this.handleResize = this.handleResize.bind(this)\n  }\n\n  componentDidMount() {\n    window.document.addEventListener('paste', this.handlePaste)\n    window.document.addEventListener('keydown', this.handleKeyDown)\n\n    this.handleResizeListen()\n  }\n\n  componentWillUnmount() {\n    this.cancelQuery()\n    this.cancelListener()\n    this.cancelEventListener()\n    this.cancelResizeListener()\n  }\n\n  handleResizeListen() {\n    if (!this._visionRoot.current) {\n      return\n    }\n\n    this._resizeListener = new ResizeObserver(this.handleResize)\n    this._resizeListener.observe(this._visionRoot.current)\n  }\n\n  handleResize(entries: ResizeObserverEntry[]) {\n    const entry = entries?.[0]\n\n    this.setState((prevState) => ({\n      ...prevState,\n      paneSizeOptions: calculatePaneSizeOptions(entry.contentRect.height),\n    }))\n  }\n\n  cancelResizeListener() {\n    if (this._resizeListener) {\n      this._resizeListener.disconnect()\n    }\n  }\n\n  handlePaste(evt: ClipboardEvent) {\n    if (!evt.clipboardData) {\n      return\n    }\n\n    const data = evt.clipboardData.getData('text/plain')\n    const match = data.match(sanityUrl)\n    if (!match) {\n      return\n    }\n\n    const [, usedApiVersion, usedDataset, urlQuery] = match\n    let parts: ParsedApiQueryString\n\n    try {\n      const qs = new URLSearchParams(urlQuery)\n      parts = parseApiQueryString(qs)\n    } catch (err) {\n      console.warn('Error while trying to parse API URL: ', err.message) // eslint-disable-line no-console\n      return // Give up on error\n    }\n\n    let apiVersion: string | undefined\n    let customApiVersion: string | false | undefined\n\n    if (validateApiVersion(usedApiVersion)) {\n      if (API_VERSIONS.includes(usedApiVersion)) {\n        apiVersion = usedApiVersion\n        customApiVersion = false\n      } else {\n        customApiVersion = usedApiVersion\n      }\n    }\n\n    evt.preventDefault()\n    this.setState(\n      (prevState) => ({\n        dataset: this.props.datasets.includes(usedDataset) ? usedDataset : prevState.dataset,\n        query: parts.query,\n        params: parts.params,\n        rawParams: JSON.stringify(parts.params, null, 2),\n        apiVersion: typeof apiVersion === 'undefined' ? prevState.apiVersion : apiVersion,\n        customApiVersion:\n          typeof customApiVersion === 'undefined' ? prevState.customApiVersion : customApiVersion,\n      }),\n      () => {\n        this._localStorage.merge({\n          query: this.state.query,\n          params: this.state.params,\n          dataset: this.state.dataset,\n          apiVersion: customApiVersion || apiVersion,\n        })\n        this._client.config({\n          dataset: this.state.dataset,\n          apiVersion: customApiVersion || apiVersion,\n        })\n        this.handleQueryExecution()\n        this.props.toast.push({\n          closable: true,\n          id: 'vision-paste',\n          status: 'info',\n          title: 'Parsed URL to query',\n        })\n      }\n    )\n  }\n\n  cancelQuery() {\n    if (!this._querySubscription) {\n      return\n    }\n\n    this._querySubscription.unsubscribe()\n    this._querySubscription = undefined\n  }\n\n  cancelListener() {\n    if (!this._listenSubscription) {\n      return\n    }\n\n    this._listenSubscription.unsubscribe()\n    this._listenSubscription = undefined\n  }\n\n  cancelEventListener() {\n    window.removeEventListener('keydown', this.handleKeyDown)\n  }\n\n  handleChangeDataset(evt: ChangeEvent<HTMLSelectElement>) {\n    const dataset = evt.target.value\n    this._localStorage.set('dataset', dataset)\n    this.setState({dataset})\n    this._client.config({dataset})\n    this.handleQueryExecution()\n  }\n\n  handleChangeApiVersion(evt: ChangeEvent<HTMLSelectElement>) {\n    const apiVersion = evt.target.value\n    if (apiVersion === 'other') {\n      this.setState({customApiVersion: 'v'}, () => {\n        this._customApiVersionElement.current?.focus()\n      })\n      return\n    }\n\n    this._localStorage.set('apiVersion', apiVersion)\n    this.setState({apiVersion, customApiVersion: false})\n    this._client.config({apiVersion})\n    this.handleQueryExecution()\n  }\n\n  handleCustomApiVersionChange(evt: ChangeEvent<HTMLInputElement>) {\n    const customApiVersion = evt.target.value || ''\n    const isValidApiVersion = validateApiVersion(customApiVersion)\n\n    this.setState(\n      (prevState) => ({\n        apiVersion: isValidApiVersion ? customApiVersion : prevState.apiVersion,\n        customApiVersion: customApiVersion || 'v',\n        isValidApiVersion,\n      }),\n      () => {\n        if (!this.state.isValidApiVersion || typeof this.state.customApiVersion !== 'string') {\n          return\n        }\n\n        this._localStorage.set('apiVersion', this.state.customApiVersion)\n        this._client.config({apiVersion: this.state.customApiVersion})\n      }\n    )\n  }\n\n  handleListenerEvent(evt: ListenEvent<any>) {\n    if (evt.type !== 'mutation') {\n      this.props.toast.push({\n        closable: true,\n        id: 'vision-listen',\n        status: 'success',\n        title: 'Listening for mutations…',\n      })\n      return\n    }\n\n    this.setState(({listenMutations}) => ({\n      listenMutations:\n        listenMutations.length === 50\n          ? [evt, ...listenMutations.slice(0, 49)]\n          : [evt, ...listenMutations],\n    }))\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    const {hasValidParams} = this.state\n    const isWithinRoot =\n      this._visionRoot.current && nodeContains(this._visionRoot.current, event.target)\n    if (isRunHotkey(event) && isWithinRoot && hasValidParams) {\n      this.handleQueryExecution()\n      event.preventDefault()\n      event.stopPropagation()\n    }\n  }\n\n  ensureSelectedApiVersion() {\n    const {apiVersion, customApiVersion} = this.state\n    const wantedApiVersion = customApiVersion || apiVersion\n    if (this._client.config().apiVersion !== wantedApiVersion) {\n      this._client.config({apiVersion: wantedApiVersion})\n    }\n  }\n\n  handleListenExecution() {\n    const {query, params, rawParams, listenInProgress} = this.state\n    if (listenInProgress) {\n      this.cancelListener()\n      this.setState({listenInProgress: false})\n      return\n    }\n\n    this.ensureSelectedApiVersion()\n\n    const paramsError = params instanceof Error ? params : undefined\n    const encodeParams = params instanceof Error ? {} : params || {}\n    const url = this._client.getUrl(\n      this._client.getDataUrl('listen', encodeQueryString(query, encodeParams))\n    )\n\n    const shouldExecute = !paramsError && query.trim().length > 0\n\n    this._localStorage.set('query', query)\n    this._localStorage.set('params', rawParams)\n\n    this.cancelQuery()\n\n    this.setState({\n      url,\n      listenMutations: [],\n      queryInProgress: false,\n      queryResult: undefined,\n      listenInProgress: shouldExecute,\n      error: paramsError,\n      queryTime: undefined,\n      e2eTime: undefined,\n    })\n\n    if (!shouldExecute) {\n      return\n    }\n\n    this._listenSubscription = this._client\n      .listen(query, params, {events: ['mutation', 'welcome']})\n      .subscribe({\n        next: this.handleListenerEvent,\n        error: (error) =>\n          this.setState({\n            error,\n            query,\n            listenInProgress: false,\n          }),\n      })\n  }\n\n  handleQueryExecution() {\n    const {query, params, rawParams, queryInProgress} = this.state\n\n    if (queryInProgress) {\n      this.cancelQuery()\n      this.cancelListener()\n      this.setState({queryInProgress: false})\n      return true\n    }\n\n    const paramsError = params instanceof Error && params\n    this._localStorage.set('query', query)\n    this._localStorage.set('params', rawParams)\n\n    this.cancelListener()\n\n    this.setState({\n      queryInProgress: !paramsError && Boolean(query),\n      listenInProgress: false,\n      listenMutations: [],\n      error: paramsError || undefined,\n      queryResult: undefined,\n      queryTime: undefined,\n      e2eTime: undefined,\n    })\n\n    if (!query || paramsError) {\n      return true\n    }\n\n    this.ensureSelectedApiVersion()\n    const url = this._client.getUrl(\n      this._client.getDataUrl('query', encodeQueryString(query, params))\n    )\n    this.setState({url})\n\n    const queryStart = Date.now()\n\n    this._querySubscription = this._client.observable\n      .fetch(query, params, {filterResponse: false, tag: 'vision'})\n      .subscribe({\n        next: (res) =>\n          this.setState({\n            queryTime: res.ms,\n            e2eTime: Date.now() - queryStart,\n            queryResult: res.result,\n            queryInProgress: false,\n            error: undefined,\n          }),\n        error: (error) =>\n          this.setState({\n            error,\n            query,\n            queryInProgress: false,\n          }),\n      })\n\n    return true\n  }\n\n  handleQueryChange(query: string) {\n    this.setState({query})\n  }\n\n  handleParamsChange({raw, parsed, valid, error}: ParamsEditorChangeEvent) {\n    this.setState(\n      {\n        rawParams: raw,\n        params: parsed,\n        hasValidParams: valid,\n        paramsError: error,\n      },\n      () => this._localStorage.set('params', raw)\n    )\n  }\n\n  handleCopyUrl() {\n    const el = this._operationUrlElement.current\n    if (!el) {\n      return\n    }\n\n    try {\n      el.select()\n      document.execCommand('copy')\n      this.props.toast.push({\n        closable: true,\n        title: 'Copied to clipboard',\n        status: 'info',\n        id: 'vision-copy',\n      })\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Unable to copy to clipboard :(')\n    }\n  }\n\n  render() {\n    const {datasets} = this.props\n    const {\n      error,\n      queryResult,\n      url,\n      queryInProgress,\n      listenInProgress,\n      paneSizeOptions,\n      queryTime,\n      e2eTime,\n      listenMutations,\n      apiVersion,\n      dataset,\n      customApiVersion,\n      isValidApiVersion,\n      hasValidParams,\n      paramsError,\n    } = this.state\n    const hasResult = !error && !queryInProgress && typeof queryResult !== 'undefined'\n\n    return (\n      <Root\n        direction=\"column\"\n        height=\"fill\"\n        ref={this._visionRoot}\n        sizing=\"border\"\n        overflow=\"hidden\"\n      >\n        <Header paddingX={3} paddingY={2}>\n          <Grid columns={[6, 6, 12]}>\n            {/* Dataset selector */}\n            <Box padding={1} column={2}>\n              <Stack>\n                <Card paddingY={2}>\n                  <StyledLabel>Dataset</StyledLabel>\n                </Card>\n                <Select value={dataset} onChange={this.handleChangeDataset}>\n                  {datasets.map((ds) => (\n                    <option key={ds}>{ds}</option>\n                  ))}\n                </Select>\n              </Stack>\n            </Box>\n\n            {/* API version selector */}\n            <Box padding={1} column={2}>\n              <Stack>\n                <Card paddingY={2}>\n                  <StyledLabel>API version</StyledLabel>\n                </Card>\n                <Select\n                  value={customApiVersion === false ? apiVersion : 'other'}\n                  onChange={this.handleChangeApiVersion}\n                >\n                  {API_VERSIONS.map((version) => (\n                    <option key={version}>{version}</option>\n                  ))}\n                  <option key=\"other\" value=\"other\">\n                    Other\n                  </option>\n                </Select>\n              </Stack>\n            </Box>\n\n            {/* Custom API version input */}\n            {customApiVersion !== false && (\n              <Box padding={1} column={2}>\n                <Stack>\n                  <Card paddingY={2}>\n                    <StyledLabel textOverflow=\"ellipsis\">Custom API version</StyledLabel>\n                  </Card>\n\n                  <TextInput\n                    ref={this._customApiVersionElement}\n                    value={customApiVersion}\n                    onChange={this.handleCustomApiVersionChange}\n                    customValidity={isValidApiVersion ? undefined : 'Invalid API version'}\n                    maxLength={11}\n                  />\n                </Stack>\n              </Box>\n            )}\n\n            {/* Query URL (for copying) */}\n            {typeof url === 'string' ? (\n              <Box padding={1} flex={1} column={customApiVersion === false ? 8 : 6}>\n                <Stack>\n                  <Card paddingY={2}>\n                    <StyledLabel>\n                      Query URL&nbsp;\n                      <QueryCopyLink onClick={this.handleCopyUrl}>[copy]</QueryCopyLink>\n                    </StyledLabel>\n                  </Card>\n                  <Flex flex={1} gap={1}>\n                    <Box flex={1}>\n                      <TextInput readOnly type=\"url\" ref={this._operationUrlElement} value={url} />\n                    </Box>\n                    <Tooltip\n                      content={\n                        <Box padding={2}>\n                          <Text>Copy to clipboard</Text>\n                        </Box>\n                      }\n                    >\n                      <Button\n                        aria-label=\"Copy to clipboard\"\n                        type=\"button\"\n                        mode=\"ghost\"\n                        icon={CopyIcon}\n                        onClick={this.handleCopyUrl}\n                      />\n                    </Tooltip>\n                  </Flex>\n                </Stack>\n              </Box>\n            ) : (\n              <Box flex={1} />\n            )}\n          </Grid>\n        </Header>\n        <SplitpaneContainer flex={1}>\n          {/* @ts-expect-error: https://github.com/tomkp/react-split-pane/pull/819 */}\n          <SplitPane split=\"vertical\" minSize={280} defaultSize={400} maxSize={-400}>\n            <Box height=\"stretch\" flex={1}>\n              {/*\n                  The way react-split-pane handles the sizes is kind of finicky and not clear. What the props above does is:\n                  - It sets the initial size of the panes to 1/2 of the total available height of the container\n                  - Sets the minimum size of a pane whatever is bigger of 1/2 of the total available height of the container, or 170px\n                  - The max size is set to either 60% or 70% of the available space, depending on if the container height is above 650px\n                  - Disables resizing when total height is below 500, since it becomes really cumbersome to work with the panes then\n                  - The \"primary\" prop (https://github.com/tomkp/react-split-pane#primary) tells the second pane to shrink or grow by the available space\n                  - Disables resize if the container height is less then 500px\n                  This should ensure that we mostly avoid a pane to take up all the room, and for the controls to not be eaten up by the pane\n                */}\n              {/* @ts-expect-error: https://github.com/tomkp/react-split-pane/pull/819 */}\n              <SplitPane\n                className=\"sidebarPanes\"\n                split=\"horizontal\"\n                defaultSize={paneSizeOptions.defaultSize}\n                size={paneSizeOptions.size}\n                allowResize={paneSizeOptions.allowResize}\n                minSize={paneSizeOptions.minSize}\n                maxSize={paneSizeOptions.maxSize}\n                primary=\"first\"\n              >\n                <InputContainer display=\"flex\" ref={this._queryEditorContainer}>\n                  <Box flex={1}>\n                    <InputBackgroundContainerLeft>\n                      <Flex>\n                        <StyledLabel muted>Query</StyledLabel>\n                      </Flex>\n                    </InputBackgroundContainerLeft>\n                    <VisionCodeMirror value={this.state.query} onChange={this.handleQueryChange} />\n                  </Box>\n                </InputContainer>\n                <InputContainer display=\"flex\" ref={this._paramsEditorContainer}>\n                  <Card flex={1} tone={hasValidParams ? 'default' : 'critical'}>\n                    <InputBackgroundContainerLeft>\n                      <Flex>\n                        <StyledLabel muted>Params</StyledLabel>\n                        {paramsError && (\n                          <Tooltip\n                            placement=\"top-end\"\n                            portal\n                            content={\n                              <Box padding={2}>\n                                <Text>{paramsError}</Text>\n                              </Box>\n                            }\n                          >\n                            <Box padding={1} marginX={2}>\n                              <Text>\n                                <ErrorOutlineIcon />\n                              </Text>\n                            </Box>\n                          </Tooltip>\n                        )}\n                      </Flex>\n                    </InputBackgroundContainerLeft>\n                    <ParamsEditor value={this.state.rawParams} onChange={this.handleParamsChange} />\n                  </Card>\n                  {/* Controls (listen/run) */}\n                  <ControlsContainer>\n                    <Card padding={3} paddingX={3}>\n                      <Tooltip\n                        content={\n                          <Card padding={2} radius={4}>\n                            <Text size={1} muted>\n                              Parameters are not valid JSON\n                            </Text>\n                          </Card>\n                        }\n                        placement=\"top\"\n                        disabled={hasValidParams}\n                        portal\n                      >\n                        <Flex justify=\"space-evenly\">\n                          <Box flex={1}>\n                            <Tooltip\n                              content={\n                                <Card padding={2} radius={4}>\n                                  <Hotkeys keys={['Ctrl', 'Enter']} />\n                                </Card>\n                              }\n                              placement=\"top\"\n                              portal\n                            >\n                              <ButtonFullWidth\n                                onClick={this.handleQueryExecution}\n                                type=\"button\"\n                                icon={queryInProgress ? StopIcon : PlayIcon}\n                                disabled={listenInProgress || !hasValidParams}\n                                tone={queryInProgress ? 'positive' : 'primary'}\n                                text={queryInProgress ? 'Cancel' : 'Fetch'}\n                              />\n                            </Tooltip>\n                          </Box>\n                          <Box flex={1} marginLeft={3}>\n                            <ButtonFullWidth\n                              onClick={this.handleListenExecution}\n                              type=\"button\"\n                              icon={listenInProgress ? StopIcon : PlayIcon}\n                              text={listenInProgress ? 'Stop' : 'Listen'}\n                              mode=\"ghost\"\n                              disabled={!hasValidParams}\n                              tone={listenInProgress ? 'positive' : 'default'}\n                            />\n                          </Box>\n                        </Flex>\n                      </Tooltip>\n                    </Card>\n                  </ControlsContainer>\n                </InputContainer>\n              </SplitPane>\n            </Box>\n            <ResultOuterContainer direction=\"column\">\n              <ResultInnerContainer flex={1}>\n                <ResultContainer\n                  flex={1}\n                  overflow=\"hidden\"\n                  tone={error ? 'critical' : 'default'}\n                  $isInvalid={Boolean(error)}\n                >\n                  <Result padding={3} paddingTop={5} overflow=\"auto\">\n                    <InputBackgroundContainer>\n                      <Box marginLeft={3}>\n                        <StyledLabel muted>Result</StyledLabel>\n                      </Box>\n                    </InputBackgroundContainer>\n                    {(queryInProgress || (listenInProgress && listenMutations.length === 0)) && (\n                      <Box marginTop={3}>\n                        <DelayedSpinner />\n                      </Box>\n                    )}\n                    {error && (\n                      <Box>\n                        <QueryErrorDialog error={error} />\n                      </Box>\n                    )}\n                    {hasResult && <ResultView data={queryResult} />}\n                    {listenInProgress && listenMutations.length > 0 && (\n                      <ResultView data={listenMutations} />\n                    )}\n                  </Result>\n                </ResultContainer>\n              </ResultInnerContainer>\n              {/* Execution time */}\n              <TimingsFooter>\n                <TimingsCard paddingX={4} paddingY={3} sizing=\"border\">\n                  <TimingsTextContainer align=\"center\">\n                    <Box>\n                      <Text muted>\n                        Execution: {typeof queryTime === 'number' ? `${queryTime}ms` : 'n/a'}\n                      </Text>\n                    </Box>\n                    <Box marginLeft={4}>\n                      <Text muted>\n                        End-to-end: {typeof e2eTime === 'number' ? `${e2eTime}ms` : 'n/a'}\n                      </Text>\n                    </Box>\n                  </TimingsTextContainer>\n                </TimingsCard>\n              </TimingsFooter>\n            </ResultOuterContainer>\n          </SplitPane>\n        </SplitpaneContainer>\n      </Root>\n    )\n  }\n}\n","import type {SanityClient} from '@sanity/client'\nimport {useEffect, useState} from 'react'\n\nexport function useDatasets(client: SanityClient): string[] | Error | undefined {\n  const projectId = client.config().projectId\n  const [datasets, setDatasets] = useState<string[] | Error | undefined>()\n\n  useEffect(() => {\n    const datasets$ = client.observable.datasets.list().subscribe({\n      next: (result) => setDatasets(result.map((ds) => ds.name)),\n      error: (err) => setDatasets(err),\n    })\n\n    return () => datasets$.unsubscribe()\n  }, [client, projectId])\n\n  return datasets || undefined\n}\n","import {useToast} from '@sanity/ui'\nimport React from 'react'\nimport {DelayedSpinner} from '../components/DelayedSpinner'\nimport {VisionGui} from '../components/VisionGui'\nimport {useDatasets} from '../hooks/useDatasets'\nimport type {VisionProps} from '../types'\n\nexport function VisionContainer(props: VisionProps) {\n  const toast = useToast()\n  const loadedDatasets = useDatasets(props.client)\n  if (!loadedDatasets) {\n    return <DelayedSpinner />\n  }\n\n  const datasets =\n    loadedDatasets instanceof Error\n      ? // On error, use the clients configured dataset\n        [props.client.config().dataset || 'production']\n      : // Otherwise use the loaded list, obviously\n        loadedDatasets\n\n  return <VisionGui {...props} datasets={datasets} toast={toast} />\n}\n","import React from 'react'\nimport {type Tool, useClient} from 'sanity'\nimport {type VisionConfig} from './types'\nimport {DEFAULT_API_VERSION} from './apiVersions'\nimport {VisionContainer} from './containers/VisionContainer'\n\ninterface SanityVisionProps {\n  tool: Tool<VisionConfig>\n}\n\nfunction SanityVision(props: SanityVisionProps) {\n  const client = useClient({apiVersion: '1'})\n  const config: VisionConfig = {\n    defaultApiVersion: DEFAULT_API_VERSION,\n    ...props.tool.options,\n  }\n\n  return <VisionContainer client={client} config={config} />\n}\n\nexport default SanityVision\n"],"names":["API_VERSIONS","DEFAULT_API_VERSION","slice","DelayedSpinner","props","show","setShow","useState","useEffect","timer","setTimeout","delay","clearTimeout","jsx","Spinner","muted","size","codemirrorExtensions","javascriptLanguage","lineNumbers","highlightActiveLine","highlightActiveLineGutter","highlightSelectionMatches","highlightSpecialChars","indentOnInput","bracketMatching","closeBrackets","history","drawSelection","syntaxHighlighting","defaultHighlightStyle","fallback","keymap","of","defaultKeymap","historyKeymap","flat","filter","Boolean","useCodemirrorTheme","theme","cmTheme","useMemo","createTheme","cmHighlight","createHighlight","color","fonts","sanity","card","enabled","cursor","hues","blue","dark","hex","selection","gray","EditorView","fg","backgroundColor","bg","caretColor","fontFamily","code","family","fontSize","rem","sizes","lineHeight","borderLeftColor","borderBottom","border","borderTop","c","base","s","syntax","HighlightStyle","define","tag","t","keyword","tags","propertyName","name","deleted","character","macroName","property","function","variableName","labelName","constant","standard","variable","definition","separator","typeName","className","number","changed","annotation","modifier","self","namespace","operator","operatorKeyword","url","escape","regexp","link","special","string","meta","comment","strong","fontWeight","emphasis","fontStyle","strikethrough","textDecoration","heading","atom","bool","boolean","processingInstruction","inserted","invalid","EditorRoot","styled","default","div","space","VisionCodeMirror","sanityTheme","useTheme","children","CodeMirror","basicSetup","extensions","isPlainObject","obj","Object","prototype","toString","call","hasLocalStorage","supportsLocalStorage","getLocalStorage","storageKey","loadedState","get","set","merge","key","defaultVal","state","ensureState","value","localStorage","setItem","JSON","stringify","loadState","stored","parse","getItem","err","mod","removeItem","parseApiQueryString","qs","params","entries","query","validateApiVersion","apiVersion","parseableApiVersion","replace","trim","toUpperCase","isValidApiVersion","length","test","isNaN","Date","prefixApiVersion","version","tryParseParams","val","parsed","JSON5","Array","isArray","message","enc","encodeURIComponent","encodeQueryString","keys","reduce","param","RO","document","ResizeObserverPolyfill","window","ResizeObserver","defaultValue","ParamsEditor","onChange","raw","error","valid","eventFromValue","isValid","setValid","handleChangeRaw","useCallback","newValue","event","handleChange","debounce","parsedParams","Error","validationError","ResultViewWrapper","css","lru","HLRU","ResultView","data","isRecord","JSONInspector","search","isExpanded","onClick","toggleExpanded","Code","language","keyPath","depthLimit","cached","segments","split","some","isArrayKeyOverLimit","path","current","numeric","segment","limit","parseInt","ErrorCode","critical","QueryErrorDetails","details","mapToLegacyDetails","line","dashLine","column","columnEnd","Box","marginTop","lineNumber","start","end","lineStart","lastIndexOf","match","indexOf","repeat","hats","QueryErrorDialog","jsxs","Stack","Root","Flex","displayName","Header","Card","StyledLabel","Label","SplitpaneContainer","QueryCopyLink","a","InputBackgroundContainer","InputBackgroundContainerLeft","InputContainer","ResultOuterContainer","ResultInnerContainer","ResultContainer","$isInvalid","Result","TimingsFooter","TimingsCard","TimingsTextContainer","text","ascenderHeight","descenderHeight","ControlsContainer","ButtonFullWidth","Button","nodeContains","node","other","compareDocumentPosition","sanityUrl","isRunHotkey","isHotkey","calculatePaneSizeOptions","rootHeight","defaultSize","allowResize","minSize","Math","min","max","maxSize","VisionGui","React","PureComponent","constructor","client","datasets","config","_localStorage","projectId","lastQuery","lastParams","defaultDataset","dataset","defaultApiVersion","customApiVersion","includes","_visionRoot","createRef","_operationUrlElement","_queryEditorContainer","_paramsEditorContainer","_customApiVersionElement","_client","withConfig","allowReconfigure","bodyHeight","body","getBoundingClientRect","height","rawParams","hasValidParams","listenMutations","queryInProgress","listenInProgress","paneSizeOptions","handleChangeDataset","bind","handleChangeApiVersion","handleCustomApiVersionChange","handleListenExecution","handleListenerEvent","handleQueryExecution","handleQueryChange","handleParamsChange","handleCopyUrl","handlePaste","handleKeyDown","handleResize","componentDidMount","addEventListener","handleResizeListen","componentWillUnmount","cancelQuery","cancelListener","cancelEventListener","cancelResizeListener","_resizeListener","observe","entry","setState","prevState","contentRect","disconnect","evt","clipboardData","getData","usedApiVersion","usedDataset","urlQuery","parts","URLSearchParams","console","warn","preventDefault","toast","push","closable","id","status","title","_querySubscription","unsubscribe","_listenSubscription","removeEventListener","target","_a","focus","type","isWithinRoot","stopPropagation","ensureSelectedApiVersion","wantedApiVersion","paramsError","encodeParams","getUrl","getDataUrl","shouldExecute","queryResult","queryTime","e2eTime","listen","events","subscribe","next","queryStart","now","observable","fetch","filterResponse","res","ms","result","el","select","execCommand","render","hasResult","direction","ref","sizing","overflow","paddingX","paddingY","Grid","columns","padding","Select","map","ds","textOverflow","TextInput","customValidity","maxLength","flex","gap","readOnly","Tooltip","content","Text","mode","icon","CopyIcon","SplitPane","primary","display","tone","placement","portal","marginX","ErrorOutlineIcon","radius","disabled","justify","Hotkeys","StopIcon","PlayIcon","marginLeft","paddingTop","align","useDatasets","setDatasets","datasets$","list","VisionContainer","useToast","loadedDatasets","SanityVision","useClient","tool","options"],"mappings":"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"}