import {Observable} from 'rxjs'
import {RuleClass} from '@sanity/types'
import type {SanityClient} from '@sanity/client'
import {SanityDocument} from '@sanity/types'
import {Schema} from '@sanity/types'
import {SchemaType} from '@sanity/types'
import {ValidationContext} from '@sanity/types'
import {ValidationMarker} from '@sanity/types'

export declare function inferFromSchema(schema: Schema): Schema

export declare function inferFromSchemaType(
  typeDef: SchemaType,
  _schema: Schema,
  _visited?: Set<SchemaType>
): SchemaType

export declare function inferFromSchemaType(typeDef: SchemaType): SchemaType

export declare const Rule: RuleClass

export declare function validateDocument(
  getClient: (options: {apiVersion: string}) => SanityClient,
  doc: SanityDocument,
  schema: Schema,
  context?: Pick<ValidationContext, 'getDocumentExists'>
): Promise<ValidationMarker[]>

export declare function validateDocumentObservable(
  getClient: (options: {apiVersion: string}) => SanityClient,
  doc: SanityDocument,
  schema: Schema,
  context?: Pick<ValidationContext, 'getDocumentExists'>
): Observable<ValidationMarker[]>

export {}
