"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _getIt = _interopRequireDefault(require("get-it"));
var _middleware = require("get-it/middleware");
var _errors = require("./errors");
var _nodeMiddleware = _interopRequireDefault(require("./nodeMiddleware"));
var _rxjs = require("rxjs");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
var httpError = {
  onResponse: function onResponse(res) {
    if (res.statusCode >= 500) {
      throw new _errors.ServerError(res);
    } else if (res.statusCode >= 400) {
      throw new _errors.ClientError(res);
    }
    return res;
  }
};
var printWarnings = {
  onResponse: function onResponse(res) {
    var warn = res.headers['x-sanity-warning'];
    var warnings = Array.isArray(warn) ? warn : [warn];
    warnings.filter(Boolean).forEach(function (msg) {
      return console.warn(msg);
    }); // eslint-disable-line no-console
    return res;
  }
};

// Environment-specific middleware.
var envSpecific = _nodeMiddleware.default;
var middleware = envSpecific.concat([printWarnings, (0, _middleware.jsonRequest)(), (0, _middleware.jsonResponse)(), (0, _middleware.progress)(), httpError, (0, _middleware.observable)({
  implementation: _rxjs.Observable
})]);
var request = (0, _getIt.default)(middleware);
function httpRequest(options) {
  var requester = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : request;
  return requester(_extends({
    maxRedirects: 0
  }, options));
}
httpRequest.defaultRequester = request;
httpRequest.ClientError = _errors.ClientError;
httpRequest.ServerError = _errors.ServerError;
var _default = httpRequest;
exports.default = _default;
module.exports = exports.default;