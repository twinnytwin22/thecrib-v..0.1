{
  "version": 3,
  "sources": ["../../src/util/browser-shouldRetry.js", "../../src/middleware/retry.js"],
  "sourcesContent": ["export default (err, attempt, options) => {\n  if (options.method !== 'GET' && options.method !== 'HEAD') {\n    return false\n  }\n\n  return err.isNetworkError || false\n}\n", "import defaultShouldRetry from '../util/node-shouldRetry'\n\nconst isStream = stream =>\n  stream !== null && typeof stream === 'object' && typeof stream.pipe === 'function'\n\nconst retry = (opts = {}) => {\n  const maxRetries = opts.maxRetries || 5\n  const retryDelay = opts.retryDelay || getRetryDelay\n  const allowRetry = opts.shouldRetry || defaultShouldRetry\n\n  return {\n    onError: (err, context) => {\n      const options = context.options\n      const max = options.maxRetries || maxRetries\n      const shouldRetry = options.shouldRetry || allowRetry\n      const attemptNumber = options.attemptNumber || 0\n\n      // We can't retry if body is a stream, since it'll be drained\n      if (isStream(options.body)) {\n        return err\n      }\n\n      // Give up?\n      if (!shouldRetry(err, attemptNumber, options) || attemptNumber >= max) {\n        return err\n      }\n\n      // Create a new context with an increased attempt number, so we can exit if we reach a limit\n      const newContext = Object.assign({}, context, {\n        options: Object.assign({}, options, {attemptNumber: attemptNumber + 1})\n      })\n\n      // Wait a given amount of time before doing the request again\n      setTimeout(() => context.channels.request.publish(newContext), retryDelay(attemptNumber))\n\n      // Signal that we've handled the error and that it should not propagate further\n      return null\n    }\n  }\n}\n\nretry.shouldRetry = defaultShouldRetry\n\nexport default retry\n\nfunction getRetryDelay(attemptNum) {\n  return 100 * Math.pow(2, attemptNum) + Math.random() * 100\n}\n"],
  "mappings": ";AAAA,IAAO,8BAAQ,CAAC,KAAK,SAAS,YAAY;AACxC,MAAI,QAAQ,WAAW,SAAS,QAAQ,WAAW,QAAQ;AACzD,WAAO;AAAA,EACT;AAEA,SAAO,IAAI,kBAAkB;AAC/B;;;ACJA,IAAM,WAAW,YACf,WAAW,QAAQ,OAAO,WAAW,YAAY,OAAO,OAAO,SAAS;AAE1E,IAAM,QAAQ,CAAC,OAAO,CAAC,MAAM;AAC3B,QAAM,aAAa,KAAK,cAAc;AACtC,QAAM,aAAa,KAAK,cAAc;AACtC,QAAM,aAAa,KAAK,eAAe;AAEvC,SAAO;AAAA,IACL,SAAS,CAAC,KAAK,YAAY;AACzB,YAAM,UAAU,QAAQ;AACxB,YAAM,MAAM,QAAQ,cAAc;AAClC,YAAM,cAAc,QAAQ,eAAe;AAC3C,YAAM,gBAAgB,QAAQ,iBAAiB;AAG/C,UAAI,SAAS,QAAQ,IAAI,GAAG;AAC1B,eAAO;AAAA,MACT;AAGA,UAAI,CAAC,YAAY,KAAK,eAAe,OAAO,KAAK,iBAAiB,KAAK;AACrE,eAAO;AAAA,MACT;AAGA,YAAM,aAAa,OAAO,OAAO,CAAC,GAAG,SAAS;AAAA,QAC5C,SAAS,OAAO,OAAO,CAAC,GAAG,SAAS,EAAC,eAAe,gBAAgB,EAAC,CAAC;AAAA,MACxE,CAAC;AAGD,iBAAW,MAAM,QAAQ,SAAS,QAAQ,QAAQ,UAAU,GAAG,WAAW,aAAa,CAAC;AAGxF,aAAO;AAAA,IACT;AAAA,EACF;AACF;AAEA,MAAM,cAAc;AAEpB,IAAO,gBAAQ;AAEf,SAAS,cAAc,YAAY;AACjC,SAAO,MAAM,KAAK,IAAI,GAAG,UAAU,IAAI,KAAK,OAAO,IAAI;AACzD;",
  "names": []
}
