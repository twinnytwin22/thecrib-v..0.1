{
  "version": 3,
  "sources": ["../../node_modules/form-urlencoded/dist/form-urlencoded.js", "../../src/middleware/urlEncoded.js"],
  "sourcesContent": ["'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n// Filename: formurlencoded.js\n// Timestamp: 2017.07.04-19:19:11 (last modified)\n// Author(s): Bumblehead (www.bumblehead.com), JBlashill (james@blashill.com), Jumper423 (jump.e.r@yandex.ru)\n\nmodule.exports = function (data) {\n    var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var sorted = Boolean(opts.sorted),\n        skipIndex = Boolean(opts.skipIndex),\n        ignorenull = Boolean(opts.ignorenull),\n        encode = function encode(value) {\n        return String(value).replace(/(?:[\\0-\\x1F\"-&\\+-\\}\\x7F-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g, encodeURIComponent).replace(/ /g, '+').replace(/[!'()~\\*]/g, function (ch) {\n            return '%' + ch.charCodeAt().toString(16).slice(-2).toUpperCase();\n        });\n    },\n        keys = function keys(obj) {\n        var keyarr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Object.keys(obj);\n        return sorted ? keyarr.sort() : keyarr;\n    },\n        filterjoin = function filterjoin(arr) {\n        return arr.filter(function (e) {\n            return e;\n        }).join('&');\n    },\n        objnest = function objnest(name, obj) {\n        return filterjoin(keys(obj).map(function (key) {\n            return nest(name + '[' + key + ']', obj[key]);\n        }));\n    },\n        arrnest = function arrnest(name, arr) {\n        return arr.length ? filterjoin(arr.map(function (elem, index) {\n            return skipIndex ? nest(name + '[]', elem) : nest(name + '[' + index + ']', elem);\n        })) : encode(name + '[]');\n    },\n        nest = function nest(name, value) {\n        var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : typeof value === 'undefined' ? 'undefined' : _typeof(value);\n        var f = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n        if (value === f) f = ignorenull ? f : encode(name) + '=' + f;else if (/string|number|boolean/.test(type)) f = encode(name) + '=' + encode(value);else if (Array.isArray(value)) f = arrnest(name, value);else if (type === 'object') f = objnest(name, value);\n\n        return f;\n    };\n\n    return data && filterjoin(keys(data).map(function (key) {\n        return nest(key, data[key]);\n    }));\n};", "import {isPlainObject} from 'is-plain-object'\nimport urlEncode from 'form-urlencoded'\n\nconst encode = urlEncode.default || urlEncode\n\nconst isBuffer = obj =>\n  !!obj.constructor &&\n  typeof obj.constructor.isBuffer === 'function' &&\n  obj.constructor.isBuffer(obj)\n\nexport default () => ({\n  processOptions: options => {\n    const body = options.body\n    if (!body) {\n      return options\n    }\n\n    const isStream = typeof body.pipe === 'function'\n    const shouldSerialize = !isStream && !isBuffer(body) && isPlainObject(body)\n\n    if (!shouldSerialize) {\n      return options\n    }\n\n    return Object.assign({}, options, {\n      body: encode(options.body),\n      headers: Object.assign({}, options.headers, {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      })\n    })\n  }\n})\n"],
  "mappings": "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",
  "names": ["encode", "keys", "filterjoin", "objnest", "arrnest", "nest", "urlEncode"]
}
