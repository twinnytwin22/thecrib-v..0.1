// src/middleware/injectResponse.js
var injectResponse_default = (opts = {}) => {
  if (typeof opts.inject !== "function") {
    throw new Error("`injectResponse` middleware requires a `inject` function");
  }
  function inject(prevValue, event) {
    const response = opts.inject(event, prevValue);
    if (!response) {
      return prevValue;
    }
    const options = event.context.options;
    return Object.assign(
      {},
      {
        body: "",
        url: options.url,
        method: options.method,
        headers: {},
        statusCode: 200,
        statusMessage: "OK"
      },
      response
    );
  }
  return { interceptRequest: inject };
};

export {
  injectResponse_default
};
//# sourceMappingURL=chunk-TDTWXLIE.mjs.map
