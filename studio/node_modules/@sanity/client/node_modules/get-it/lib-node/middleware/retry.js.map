{"version":3,"file":"retry.js","names":["isStream","stream","pipe","retry","opts","maxRetries","retryDelay","getRetryDelay","allowRetry","shouldRetry","defaultShouldRetry","onError","err","context","options","max","attemptNumber","body","newContext","Object","assign","setTimeout","channels","request","publish","attemptNum","Math","pow","random"],"sources":["../../src/middleware/retry.js"],"sourcesContent":["import defaultShouldRetry from '../util/node-shouldRetry'\n\nconst isStream = stream =>\n  stream !== null && typeof stream === 'object' && typeof stream.pipe === 'function'\n\nconst retry = (opts = {}) => {\n  const maxRetries = opts.maxRetries || 5\n  const retryDelay = opts.retryDelay || getRetryDelay\n  const allowRetry = opts.shouldRetry || defaultShouldRetry\n\n  return {\n    onError: (err, context) => {\n      const options = context.options\n      const max = options.maxRetries || maxRetries\n      const shouldRetry = options.shouldRetry || allowRetry\n      const attemptNumber = options.attemptNumber || 0\n\n      // We can't retry if body is a stream, since it'll be drained\n      if (isStream(options.body)) {\n        return err\n      }\n\n      // Give up?\n      if (!shouldRetry(err, attemptNumber, options) || attemptNumber >= max) {\n        return err\n      }\n\n      // Create a new context with an increased attempt number, so we can exit if we reach a limit\n      const newContext = Object.assign({}, context, {\n        options: Object.assign({}, options, {attemptNumber: attemptNumber + 1})\n      })\n\n      // Wait a given amount of time before doing the request again\n      setTimeout(() => context.channels.request.publish(newContext), retryDelay(attemptNumber))\n\n      // Signal that we've handled the error and that it should not propagate further\n      return null\n    }\n  }\n}\n\nretry.shouldRetry = defaultShouldRetry\n\nexport default retry\n\nfunction getRetryDelay(attemptNum) {\n  return 100 * Math.pow(2, attemptNum) + Math.random() * 100\n}\n"],"mappings":";;;;;;;AAAA;;;;AAEA,MAAMA,QAAQ,GAAGC,MAAM,IACrBA,MAAM,KAAK,IAAX,IAAmB,OAAOA,MAAP,KAAkB,QAArC,IAAiD,OAAOA,MAAM,CAACC,IAAd,KAAuB,UAD1E;;AAGA,MAAMC,KAAK,GAAG,CAACC,IAAI,GAAG,EAAR,KAAe;EAC3B,MAAMC,UAAU,GAAGD,IAAI,CAACC,UAAL,IAAmB,CAAtC;EACA,MAAMC,UAAU,GAAGF,IAAI,CAACE,UAAL,IAAmBC,aAAtC;EACA,MAAMC,UAAU,GAAGJ,IAAI,CAACK,WAAL,IAAoBC,wBAAvC;EAEA,OAAO;IACLC,OAAO,EAAE,CAACC,GAAD,EAAMC,OAAN,KAAkB;MACzB,MAAMC,OAAO,GAAGD,OAAO,CAACC,OAAxB;MACA,MAAMC,GAAG,GAAGD,OAAO,CAACT,UAAR,IAAsBA,UAAlC;MACA,MAAMI,WAAW,GAAGK,OAAO,CAACL,WAAR,IAAuBD,UAA3C;MACA,MAAMQ,aAAa,GAAGF,OAAO,CAACE,aAAR,IAAyB,CAA/C,CAJyB,CAMzB;;MACA,IAAIhB,QAAQ,CAACc,OAAO,CAACG,IAAT,CAAZ,EAA4B;QAC1B,OAAOL,GAAP;MACD,CATwB,CAWzB;;;MACA,IAAI,CAACH,WAAW,CAACG,GAAD,EAAMI,aAAN,EAAqBF,OAArB,CAAZ,IAA6CE,aAAa,IAAID,GAAlE,EAAuE;QACrE,OAAOH,GAAP;MACD,CAdwB,CAgBzB;;;MACA,MAAMM,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,OAAlB,EAA2B;QAC5CC,OAAO,EAAEK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,OAAlB,EAA2B;UAACE,aAAa,EAAEA,aAAa,GAAG;QAAhC,CAA3B;MADmC,CAA3B,CAAnB,CAjByB,CAqBzB;;MACAK,UAAU,CAAC,MAAMR,OAAO,CAACS,QAAR,CAAiBC,OAAjB,CAAyBC,OAAzB,CAAiCN,UAAjC,CAAP,EAAqDZ,UAAU,CAACU,aAAD,CAA/D,CAAV,CAtByB,CAwBzB;;MACA,OAAO,IAAP;IACD;EA3BI,CAAP;AA6BD,CAlCD;;AAoCAb,KAAK,CAACM,WAAN,GAAoBC,wBAApB;eAEeP,K;;;AAEf,SAASI,aAAT,CAAuBkB,UAAvB,EAAmC;EACjC,OAAO,MAAMC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYF,UAAZ,CAAN,GAAgCC,IAAI,CAACE,MAAL,KAAgB,GAAvD;AACD"}