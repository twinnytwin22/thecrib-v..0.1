{"version":3,"file":"proxy.js","names":["url","require","formatHostname","hostname","replace","toLowerCase","parseNoProxyZone","zoneStr","zone","trim","zoneParts","split","zoneHost","zonePort","hasPort","indexOf","port","uriInNoProxy","uri","noProxy","protocol","noProxyList","map","some","noProxyZone","isMatchedAt","hostnameMatched","length","getProxyFromUri","process","env","NO_PROXY","no_proxy","HTTP_PROXY","http_proxy","HTTPS_PROXY","https_proxy","getHostFromUri","host","getHostHeaderWithPort","rewriteUriForProxy","reqOpts","proxy","headers","options","Object","assign","href","path","format","getProxyOptions","hasOwnProperty","parse","exports"],"sources":["../../../src/request/node/proxy.js"],"sourcesContent":["/**\n * Code borrowed from https://github.com/request/request\n * Apache License 2.0\n */\n\n/* eslint-disable no-process-env */\nconst url = require('url')\n\nfunction formatHostname(hostname) {\n  // canonicalize the hostname, so that 'oogle.com' won't match 'google.com'\n  return hostname.replace(/^\\.*/, '.').toLowerCase()\n}\n\nfunction parseNoProxyZone(zoneStr) {\n  const zone = zoneStr.trim().toLowerCase()\n\n  const zoneParts = zone.split(':', 2)\n  const zoneHost = formatHostname(zoneParts[0])\n  const zonePort = zoneParts[1]\n  const hasPort = zone.indexOf(':') > -1\n\n  return {hostname: zoneHost, port: zonePort, hasPort: hasPort}\n}\n\nfunction uriInNoProxy(uri, noProxy) {\n  const port = uri.port || (uri.protocol === 'https:' ? '443' : '80')\n  const hostname = formatHostname(uri.hostname)\n  const noProxyList = noProxy.split(',')\n\n  // iterate through the noProxyList until it finds a match.\n  return noProxyList.map(parseNoProxyZone).some(noProxyZone => {\n    const isMatchedAt = hostname.indexOf(noProxyZone.hostname)\n    const hostnameMatched =\n      isMatchedAt > -1 && isMatchedAt === hostname.length - noProxyZone.hostname.length\n\n    if (noProxyZone.hasPort) {\n      return port === noProxyZone.port && hostnameMatched\n    }\n\n    return hostnameMatched\n  })\n}\n\nfunction getProxyFromUri(uri) {\n  // Decide the proper request proxy to use based on the request URI object and the\n  // environmental variables (NO_PROXY, HTTP_PROXY, etc.)\n  // respect NO_PROXY environment variables (see: http://lynx.isc.org/current/breakout/lynx_help/keystrokes/environments.html)\n  const noProxy = process.env.NO_PROXY || process.env.no_proxy || ''\n\n  // if the noProxy is a wildcard then return null\n  if (noProxy === '*') {\n    return null\n  }\n\n  // if the noProxy is not empty and the uri is found return null\n  if (noProxy !== '' && uriInNoProxy(uri, noProxy)) {\n    return null\n  }\n\n  // Check for HTTP or HTTPS Proxy in environment, else default to null\n  if (uri.protocol === 'http:') {\n    return process.env.HTTP_PROXY || process.env.http_proxy || null\n  }\n\n  if (uri.protocol === 'https:') {\n    return (\n      process.env.HTTPS_PROXY ||\n      process.env.https_proxy ||\n      process.env.HTTP_PROXY ||\n      process.env.http_proxy ||\n      null\n    )\n  }\n\n  // if none of that works, return null\n  // (What uri protocol are you using then?)\n  return null\n}\n\nfunction getHostFromUri(uri) {\n  let host = uri.host\n\n  // Drop :port suffix from Host header if known protocol.\n  if (uri.port) {\n    if (\n      (uri.port === '80' && uri.protocol === 'http:') ||\n      (uri.port === '443' && uri.protocol === 'https:')\n    ) {\n      host = uri.hostname\n    }\n  }\n\n  return host\n}\n\nfunction getHostHeaderWithPort(uri) {\n  const port = uri.port || (uri.protocol === 'https:' ? '443' : '80')\n  return `${uri.hostname}:${port}`\n}\n\nfunction rewriteUriForProxy(reqOpts, uri, proxy) {\n  const headers = reqOpts.headers || {}\n  const options = Object.assign({}, reqOpts, {headers})\n  headers.host = headers.host || getHostHeaderWithPort(uri)\n  options.protocol = proxy.protocol || options.protocol\n  options.hostname = proxy.host.replace(/:\\d+/, '')\n  options.port = proxy.port\n  options.host = getHostFromUri(Object.assign({}, uri, proxy))\n  options.href = `${options.protocol}//${options.host}${options.path}`\n  options.path = url.format(uri)\n  return options\n}\n\nfunction getProxyOptions(options) {\n  let proxy\n  if (options.hasOwnProperty('proxy')) {\n    proxy = options.proxy\n  } else {\n    const uri = url.parse(options.url)\n    proxy = getProxyFromUri(uri)\n  }\n\n  return typeof proxy === 'string' ? url.parse(proxy) : proxy\n}\n\nexports.rewriteUriForProxy = rewriteUriForProxy\nexports.getProxyOptions = getProxyOptions\n"],"mappings":"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"}