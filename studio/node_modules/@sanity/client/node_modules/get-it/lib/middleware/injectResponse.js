"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

var _default = function _default() {
  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  if (typeof opts.inject !== 'function') {
    throw new Error('`injectResponse` middleware requires a `inject` function');
  }

  function inject(prevValue, event) {
    var response = opts.inject(event, prevValue);

    if (!response) {
      return prevValue;
    } // Merge defaults so we don't have to provide the most basic of details unless we want to


    var options = event.context.options;
    return _extends({}, {
      body: '',
      url: options.url,
      method: options.method,
      headers: {},
      statusCode: 200,
      statusMessage: 'OK'
    }, response);
  }

  return {
    interceptRequest: inject
  };
};

exports.default = _default;
module.exports = exports.default;
//# sourceMappingURL=injectResponse.js.map