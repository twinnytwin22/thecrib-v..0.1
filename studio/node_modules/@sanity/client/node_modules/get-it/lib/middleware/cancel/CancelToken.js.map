{"version":3,"file":"CancelToken.js","names":["Cancel","require","CancelToken","executor","TypeError","resolvePromise","promise","Promise","resolve","message","reason","source","cancel","token","can"],"sources":["../../../src/middleware/cancel/CancelToken.js"],"sourcesContent":["const Cancel = require('./Cancel')\n\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.')\n  }\n\n  let resolvePromise = null\n  this.promise = new Promise(resolve => {\n    resolvePromise = resolve\n  })\n\n  executor(message => {\n    if (this.reason) {\n      // Cancellation has already been requested\n      return\n    }\n\n    this.reason = new Cancel(message)\n    resolvePromise(this.reason)\n  })\n}\n\nCancelToken.source = function() {\n  let cancel\n  const token = new CancelToken(can => {\n    cancel = can\n  })\n\n  return {\n    token: token,\n    cancel: cancel\n  }\n}\n\nexport default CancelToken\n"],"mappings":";;;;;;;AAAA,IAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,SAASC,WAAT,CAAqBC,QAArB,EAA+B;EAAA;;EAC7B,IAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;IAClC,MAAM,IAAIC,SAAJ,CAAc,8BAAd,CAAN;EACD;;EAED,IAAIC,cAAc,GAAG,IAArB;EACA,KAAKC,OAAL,GAAe,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;IACpCH,cAAc,GAAGG,OAAjB;EACD,CAFc,CAAf;EAIAL,QAAQ,CAAC,UAAAM,OAAO,EAAI;IAClB,IAAI,KAAI,CAACC,MAAT,EAAiB;MACf;MACA;IACD;;IAED,KAAI,CAACA,MAAL,GAAc,IAAIV,MAAJ,CAAWS,OAAX,CAAd;IACAJ,cAAc,CAAC,KAAI,CAACK,MAAN,CAAd;EACD,CARO,CAAR;AASD;;AAEDR,WAAW,CAACS,MAAZ,GAAqB,YAAW;EAC9B,IAAIC,MAAJ;EACA,IAAMC,KAAK,GAAG,IAAIX,WAAJ,CAAgB,UAAAY,GAAG,EAAI;IACnCF,MAAM,GAAGE,GAAT;EACD,CAFa,CAAd;EAIA,OAAO;IACLD,KAAK,EAAEA,KADF;IAELD,MAAM,EAAEA;EAFH,CAAP;AAID,CAVD;;eAYeV,W"}