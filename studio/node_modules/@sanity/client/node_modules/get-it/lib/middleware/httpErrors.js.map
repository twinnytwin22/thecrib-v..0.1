{"version":3,"file":"httpErrors.js","names":["HttpError","createErrorClass","res","ctx","truncatedUrl","url","length","slice","msg","method","statusCode","statusMessage","message","trim","response","request","options","onResponse","isHttpError"],"sources":["../../src/middleware/httpErrors.js"],"sourcesContent":["import createErrorClass from 'create-error-class'\n\nconst HttpError = createErrorClass('HttpError', function(res, ctx) {\n  const truncatedUrl = res.url.length > 400 ? `${res.url.slice(0, 399)}â€¦` : res.url\n  let msg = `${res.method}-request to ${truncatedUrl} resulted in `\n  msg += `HTTP ${res.statusCode} ${res.statusMessage}`\n\n  this.message = msg.trim()\n  this.response = res\n  this.request = ctx.options\n})\n\nexport default () => ({\n  onResponse: (res, ctx) => {\n    const isHttpError = res.statusCode >= 400\n    if (!isHttpError) {\n      return res\n    }\n\n    throw new HttpError(res, ctx)\n  }\n})\n"],"mappings":";;;;;;;AAAA;;;;AAEA,IAAMA,SAAS,GAAG,IAAAC,yBAAA,EAAiB,WAAjB,EAA8B,UAASC,GAAT,EAAcC,GAAd,EAAmB;EACjE,IAAMC,YAAY,GAAGF,GAAG,CAACG,GAAJ,CAAQC,MAAR,GAAiB,GAAjB,aAA0BJ,GAAG,CAACG,GAAJ,CAAQE,KAAR,CAAc,CAAd,EAAiB,GAAjB,CAA1B,cAAqDL,GAAG,CAACG,GAA9E;EACA,IAAIG,GAAG,aAAMN,GAAG,CAACO,MAAV,yBAA+BL,YAA/B,kBAAP;EACAI,GAAG,mBAAYN,GAAG,CAACQ,UAAhB,cAA8BR,GAAG,CAACS,aAAlC,CAAH;EAEA,KAAKC,OAAL,GAAeJ,GAAG,CAACK,IAAJ,EAAf;EACA,KAAKC,QAAL,GAAgBZ,GAAhB;EACA,KAAKa,OAAL,GAAeZ,GAAG,CAACa,OAAnB;AACD,CARiB,CAAlB;;eAUe;EAAA,OAAO;IACpBC,UAAU,EAAE,oBAACf,GAAD,EAAMC,GAAN,EAAc;MACxB,IAAMe,WAAW,GAAGhB,GAAG,CAACQ,UAAJ,IAAkB,GAAtC;;MACA,IAAI,CAACQ,WAAL,EAAkB;QAChB,OAAOhB,GAAP;MACD;;MAED,MAAM,IAAIF,SAAJ,CAAcE,GAAd,EAAmBC,GAAnB,CAAN;IACD;EARmB,CAAP;AAAA,C"}