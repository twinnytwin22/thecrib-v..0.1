{"version":3,"file":"index.esm.js","sources":["../../src/index.tsx"],"sourcesContent":["import * as React from 'react'\nimport {\n  elementScroll,\n  observeElementOffset,\n  observeElementRect,\n  observeWindowOffset,\n  observeWindowRect,\n  PartialKeys,\n  Virtualizer,\n  VirtualizerOptions,\n  windowScroll,\n} from '@tanstack/virtual-core'\nexport * from '@tanstack/virtual-core'\n\n//\n\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nfunction useVirtualizerBase<\n  TScrollElement extends Element | Window,\n  TItemElement extends Element,\n>(\n  options: VirtualizerOptions<TScrollElement, TItemElement>,\n): Virtualizer<TScrollElement, TItemElement> {\n  const rerender = React.useReducer(() => ({}), {})[1]\n\n  const resolvedOptions: VirtualizerOptions<TScrollElement, TItemElement> = {\n    ...options,\n    onChange: (instance) => {\n      rerender()\n      options.onChange?.(instance)\n    },\n  }\n\n  const [instance] = React.useState(\n    () => new Virtualizer<TScrollElement, TItemElement>(resolvedOptions),\n  )\n\n  instance.setOptions(resolvedOptions)\n\n  React.useEffect(() => {\n    return instance._didMount()\n  }, [])\n\n  useIsomorphicLayoutEffect(() => {\n    return instance._willUpdate()\n  })\n\n  return instance\n}\n\nexport function useVirtualizer<\n  TScrollElement extends Element,\n  TItemElement extends Element,\n>(\n  options: PartialKeys<\n    VirtualizerOptions<TScrollElement, TItemElement>,\n    'observeElementRect' | 'observeElementOffset' | 'scrollToFn'\n  >,\n): Virtualizer<TScrollElement, TItemElement> {\n  return useVirtualizerBase<TScrollElement, TItemElement>({\n    observeElementRect: observeElementRect,\n    observeElementOffset: observeElementOffset,\n    scrollToFn: elementScroll,\n    ...options,\n  })\n}\n\nexport function useWindowVirtualizer<TItemElement extends Element>(\n  options: PartialKeys<\n    VirtualizerOptions<Window, TItemElement>,\n    | 'getScrollElement'\n    | 'observeElementRect'\n    | 'observeElementOffset'\n    | 'scrollToFn'\n  >,\n): Virtualizer<Window, TItemElement> {\n  return useVirtualizerBase<Window, TItemElement>({\n    getScrollElement: () => (typeof window !== 'undefined' ? window : null!),\n    observeElementRect: observeWindowRect,\n    observeElementOffset: observeWindowOffset,\n    scrollToFn: windowScroll,\n    ...options,\n  })\n}\n"],"names":["useIsomorphicLayoutEffect","window","React","useLayoutEffect","useEffect","useVirtualizerBase","options","rerender","useReducer","resolvedOptions","onChange","instance","useState","Virtualizer","setOptions","_didMount","_willUpdate","useVirtualizer","observeElementRect","observeElementOffset","scrollToFn","elementScroll","useWindowVirtualizer","getScrollElement","observeWindowRect","observeWindowOffset","windowScroll"],"mappings":";;;;;;;;;;;;;;AAcA;;AAEA,MAAMA,yBAAyB,GAC7B,OAAOC,MAAM,KAAK,WAAW,GAAGC,KAAK,CAACC,eAAe,GAAGD,KAAK,CAACE,SAAS,CAAA;AAEzE,SAASC,kBAAkB,CAIzBC,OAAyD,EACd;AAC3C,EAAA,MAAMC,QAAQ,GAAGL,KAAK,CAACM,UAAU,CAAC,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;AAEpD,EAAA,MAAMC,eAAiE,GAAG;AACxE,IAAA,GAAGH,OAAO;IACVI,QAAQ,EAAGC,QAAQ,IAAK;AACtBJ,MAAAA,QAAQ,EAAE,CAAA;MACVD,OAAO,CAACI,QAAQ,IAAhBJ,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,OAAO,CAACI,QAAQ,CAAGC,QAAQ,CAAC,CAAA;AAC9B,KAAA;GACD,CAAA;AAED,EAAA,MAAM,CAACA,QAAQ,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAC/B,MAAM,IAAIC,WAAW,CAA+BJ,eAAe,CAAC,CACrE,CAAA;AAEDE,EAAAA,QAAQ,CAACG,UAAU,CAACL,eAAe,CAAC,CAAA;EAEpCP,KAAK,CAACE,SAAS,CAAC,MAAM;IACpB,OAAOO,QAAQ,CAACI,SAAS,EAAE,CAAA;GAC5B,EAAE,EAAE,CAAC,CAAA;AAENf,EAAAA,yBAAyB,CAAC,MAAM;IAC9B,OAAOW,QAAQ,CAACK,WAAW,EAAE,CAAA;AAC/B,GAAC,CAAC,CAAA;AAEF,EAAA,OAAOL,QAAQ,CAAA;AACjB,CAAA;AAEO,SAASM,cAAc,CAI5BX,OAGC,EAC0C;AAC3C,EAAA,OAAOD,kBAAkB,CAA+B;AACtDa,IAAAA,kBAAkB,EAAEA,kBAAkB;AACtCC,IAAAA,oBAAoB,EAAEA,oBAAoB;AAC1CC,IAAAA,UAAU,EAAEC,aAAa;IACzB,GAAGf,OAAAA;AACL,GAAC,CAAC,CAAA;AACJ,CAAA;AAEO,SAASgB,oBAAoB,CAClChB,OAMC,EACkC;AACnC,EAAA,OAAOD,kBAAkB,CAAuB;IAC9CkB,gBAAgB,EAAE,MAAO,OAAOtB,MAAM,KAAK,WAAW,GAAGA,MAAM,GAAG,IAAM;AACxEiB,IAAAA,kBAAkB,EAAEM,iBAAiB;AACrCL,IAAAA,oBAAoB,EAAEM,mBAAmB;AACzCL,IAAAA,UAAU,EAAEM,YAAY;IACxB,GAAGpB,OAAAA;AACL,GAAC,CAAC,CAAA;AACJ;;;;"}