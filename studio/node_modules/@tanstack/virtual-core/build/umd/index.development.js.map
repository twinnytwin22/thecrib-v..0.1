{"version":3,"file":"index.development.js","sources":["../../src/utils.ts","../../src/index.ts"],"sourcesContent":["export type NoInfer<A extends any> = [A][A extends any ? 0 : never]\n\nexport type PartialKeys<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>\n\nexport function memo<TDeps extends readonly any[], TResult>(\n  getDeps: () => [...TDeps],\n  fn: (...args: NoInfer<[...TDeps]>) => TResult,\n  opts: {\n    key: any\n    debug?: () => any\n    onChange?: (result: TResult) => void\n  },\n): () => TResult {\n  let deps: any[] = []\n  let result: TResult | undefined\n\n  return () => {\n    let depTime: number\n    if (opts.key && opts.debug?.()) depTime = Date.now()\n\n    const newDeps = getDeps()\n\n    const depsChanged =\n      newDeps.length !== deps.length ||\n      newDeps.some((dep: any, index: number) => deps[index] !== dep)\n\n    if (!depsChanged) {\n      return result!\n    }\n\n    deps = newDeps\n\n    let resultTime: number\n    if (opts.key && opts.debug?.()) resultTime = Date.now()\n\n    result = fn(...newDeps)\n    opts?.onChange?.(result)\n\n    if (opts.key && opts.debug?.()) {\n      const depEndTime = Math.round((Date.now() - depTime!) * 100) / 100\n      const resultEndTime = Math.round((Date.now() - resultTime!) * 100) / 100\n      const resultFpsPercentage = resultEndTime / 16\n\n      const pad = (str: number | string, num: number) => {\n        str = String(str)\n        while (str.length < num) {\n          str = ' ' + str\n        }\n        return str\n      }\n\n      console.info(\n        `%c⏱ ${pad(resultEndTime, 5)} /${pad(depEndTime, 5)} ms`,\n        `\n            font-size: .6rem;\n            font-weight: bold;\n            color: hsl(${Math.max(\n              0,\n              Math.min(120 - 120 * resultFpsPercentage, 120),\n            )}deg 100% 31%);`,\n        opts?.key,\n      )\n    }\n\n    return result!\n  }\n}\n","import { memo } from './utils'\n\nexport * from './utils'\n\n//\n\ntype ScrollAlignment = 'start' | 'center' | 'end' | 'auto'\n\ntype ScrollBehavior = 'auto' | 'smooth'\n\nexport interface ScrollToOptions {\n  align?: ScrollAlignment\n  behavior?: ScrollBehavior\n}\n\ntype ScrollToOffsetOptions = ScrollToOptions\n\ntype ScrollToIndexOptions = ScrollToOptions\n\nexport interface Range {\n  startIndex: number\n  endIndex: number\n  overscan: number\n  count: number\n}\n\ntype Key = number | string\n\nexport interface VirtualItem {\n  key: Key\n  index: number\n  start: number\n  end: number\n  size: number\n}\n\ninterface Rect {\n  width: number\n  height: number\n}\n\n//\n\nexport const defaultKeyExtractor = (index: number) => index\n\nexport const defaultRangeExtractor = (range: Range) => {\n  const start = Math.max(range.startIndex - range.overscan, 0)\n  const end = Math.min(range.endIndex + range.overscan, range.count - 1)\n\n  const arr = []\n\n  for (let i = start; i <= end; i++) {\n    arr.push(i)\n  }\n\n  return arr\n}\n\nconst memoRectCallback = (\n  instance: Virtualizer<any, any>,\n  cb: (rect: Rect) => void,\n) => {\n  let prev: Rect = { height: -1, width: -1 }\n\n  return (rect: Rect) => {\n    if (\n      instance.options.horizontal\n        ? rect.width !== prev.width\n        : rect.height !== prev.height\n    ) {\n      cb(rect)\n    }\n\n    prev = rect\n  }\n}\n\nexport const observeElementRect = (\n  instance: Virtualizer<any, any>,\n  cb: (rect: Rect) => void,\n) => {\n  const observer = new ResizeObserver((entries) => {\n    cb({\n      width: entries[0]?.contentRect.width as number,\n      height: entries[0]?.contentRect.height as number,\n    })\n  })\n\n  if (!instance.scrollElement) {\n    return\n  }\n\n  cb(instance.scrollElement.getBoundingClientRect())\n\n  observer.observe(instance.scrollElement)\n\n  return () => {\n    observer.unobserve(instance.scrollElement)\n  }\n}\n\nexport const observeWindowRect = (\n  instance: Virtualizer<any, any>,\n  cb: (rect: Rect) => void,\n) => {\n  const memoizedCallback = memoRectCallback(instance, cb)\n  const onResize = () =>\n    memoizedCallback({\n      width: instance.scrollElement.innerWidth,\n      height: instance.scrollElement.innerHeight,\n    })\n\n  if (!instance.scrollElement) {\n    return\n  }\n\n  onResize()\n\n  instance.scrollElement.addEventListener('resize', onResize, {\n    capture: false,\n    passive: true,\n  })\n\n  return () => {\n    instance.scrollElement.removeEventListener('resize', onResize)\n  }\n}\n\ntype ObserverMode = 'element' | 'window'\n\nconst scrollProps = {\n  element: ['scrollLeft', 'scrollTop'],\n  window: ['scrollX', 'scrollY'],\n} as const\n\nconst createOffsetObserver = (mode: ObserverMode) => {\n  return (instance: Virtualizer<any, any>, cb: (offset: number) => void) => {\n    if (!instance.scrollElement) {\n      return\n    }\n\n    const propX = scrollProps[mode][0]\n    const propY = scrollProps[mode][1]\n\n    let prevX: number = instance.scrollElement[propX]\n    let prevY: number = instance.scrollElement[propY]\n\n    const scroll = () => {\n      const offset =\n        instance.scrollElement[instance.options.horizontal ? propX : propY]\n\n      cb(Math.max(0, offset - instance.options.scrollMargin))\n    }\n\n    scroll()\n\n    const onScroll = (e: Event) => {\n      const target = e.currentTarget as HTMLElement & Window\n      const scrollX = target[propX]\n      const scrollY = target[propY]\n\n      if (instance.options.horizontal ? prevX - scrollX : prevY - scrollY) {\n        scroll()\n      }\n\n      prevX = scrollX\n      prevY = scrollY\n    }\n\n    instance.scrollElement.addEventListener('scroll', onScroll, {\n      capture: false,\n      passive: true,\n    })\n\n    return () => {\n      instance.scrollElement.removeEventListener('scroll', onScroll)\n    }\n  }\n}\n\nexport const observeElementOffset = createOffsetObserver('element')\nexport const observeWindowOffset = createOffsetObserver('window')\n\nexport const measureElement = <TItemElement extends Element>(\n  element: TItemElement,\n  instance: Virtualizer<any, TItemElement>,\n) => {\n  return Math.round(\n    element.getBoundingClientRect()[\n      instance.options.horizontal ? 'width' : 'height'\n    ],\n  )\n}\n\nexport const windowScroll = <T extends Window>(\n  offset: number,\n  {\n    adjustments,\n    behavior,\n    sync,\n  }: { adjustments?: number; behavior?: ScrollBehavior; sync: boolean },\n  instance: Virtualizer<T, any>,\n) => {\n  const toOffset =\n    (sync ? offset : offset + instance.options.scrollMargin) +\n    (adjustments ?? 0)\n\n  instance.scrollElement?.scrollTo?.({\n    [instance.options.horizontal ? 'left' : 'top']: toOffset,\n    behavior,\n  })\n}\n\nexport const elementScroll = <T extends Element>(\n  offset: number,\n  {\n    adjustments,\n    behavior,\n    sync,\n  }: { adjustments?: number; behavior?: ScrollBehavior; sync: boolean },\n  instance: Virtualizer<T, any>,\n) => {\n  const toOffset =\n    (sync ? offset : offset + instance.options.scrollMargin) +\n    (adjustments ?? 0)\n\n  instance.scrollElement?.scrollTo?.({\n    [instance.options.horizontal ? 'left' : 'top']: toOffset,\n    behavior,\n  })\n}\n\nexport interface VirtualizerOptions<\n  TScrollElement extends Element | Window,\n  TItemElement extends Element,\n> {\n  // Required from the user\n  count: number\n  getScrollElement: () => TScrollElement | null\n  estimateSize: (index: number) => number\n\n  // Required from the framework adapter (but can be overridden)\n  scrollToFn: (\n    offset: number,\n    options: { adjustments?: number; behavior?: ScrollBehavior; sync: boolean },\n    instance: Virtualizer<TScrollElement, TItemElement>,\n  ) => void\n  observeElementRect: (\n    instance: Virtualizer<TScrollElement, TItemElement>,\n    cb: (rect: Rect) => void,\n  ) => void | (() => void)\n  observeElementOffset: (\n    instance: Virtualizer<TScrollElement, TItemElement>,\n    cb: (offset: number) => void,\n  ) => void | (() => void)\n\n  // Optional\n  debug?: any\n  initialRect?: Rect\n  onChange?: (instance: Virtualizer<TScrollElement, TItemElement>) => void\n  measureElement?: (\n    el: TItemElement,\n    instance: Virtualizer<TScrollElement, TItemElement>,\n  ) => number\n  overscan?: number\n  horizontal?: boolean\n  paddingStart?: number\n  paddingEnd?: number\n  scrollPaddingStart?: number\n  scrollPaddingEnd?: number\n  initialOffset?: number\n  getItemKey?: (index: number) => Key\n  rangeExtractor?: (range: Range) => number[]\n  scrollMargin?: number\n  scrollingDelay?: number\n  indexAttribute?: string\n}\n\nexport class Virtualizer<\n  TScrollElement extends Element | Window,\n  TItemElement extends Element,\n> {\n  private unsubs: (void | (() => void))[] = []\n  options!: Required<VirtualizerOptions<TScrollElement, TItemElement>>\n  scrollElement: TScrollElement | null = null\n  isScrolling: boolean = false\n  private isScrollingTimeoutId: ReturnType<typeof setTimeout> | null = null\n  measurementsCache: VirtualItem[] = []\n  private itemMeasurementsCache: Record<Key, number> = {}\n  private pendingMeasuredCacheIndexes: number[] = []\n  private scrollRect: Rect\n  private scrollOffset: number\n  private scrollAdjustments: number = 0\n  private measureElementCache: Record<Key, TItemElement> = {}\n  private pendingScrollToIndexCallback: (() => void) | null = null\n  private getResizeObserver = (() => {\n    let _ro: ResizeObserver | null = null\n\n    return () => {\n      if (_ro) {\n        return _ro\n      } else if (typeof ResizeObserver !== 'undefined') {\n        return (_ro = new ResizeObserver((entries) => {\n          entries.forEach((entry) => {\n            this._measureElement(entry.target as TItemElement, false)\n          })\n        }))\n      } else {\n        return null\n      }\n    }\n  })()\n  range: { startIndex: number; endIndex: number } = {\n    startIndex: 0,\n    endIndex: 0,\n  }\n\n  constructor(opts: VirtualizerOptions<TScrollElement, TItemElement>) {\n    this.setOptions(opts)\n    this.scrollRect = this.options.initialRect\n    this.scrollOffset = this.options.initialOffset\n\n    this.calculateRange()\n  }\n\n  setOptions = (opts: VirtualizerOptions<TScrollElement, TItemElement>) => {\n    Object.entries(opts).forEach(([key, value]) => {\n      if (typeof value === 'undefined') delete (opts as any)[key]\n    })\n\n    this.options = {\n      debug: false,\n      initialOffset: 0,\n      overscan: 1,\n      paddingStart: 0,\n      paddingEnd: 0,\n      scrollPaddingStart: 0,\n      scrollPaddingEnd: 0,\n      horizontal: false,\n      getItemKey: defaultKeyExtractor,\n      rangeExtractor: defaultRangeExtractor,\n      onChange: () => {},\n      measureElement,\n      initialRect: { width: 0, height: 0 },\n      scrollMargin: 0,\n      scrollingDelay: 150,\n      indexAttribute: 'data-index',\n      ...opts,\n    }\n  }\n\n  private notify = () => {\n    this.options.onChange?.(this)\n  }\n\n  private cleanup = () => {\n    this.unsubs.filter(Boolean).forEach((d) => d!())\n    this.unsubs = []\n    this.scrollElement = null\n  }\n\n  _didMount = () => {\n    const ro = this.getResizeObserver()\n    Object.values(this.measureElementCache).forEach((node) => ro?.observe(node))\n\n    return () => {\n      ro?.disconnect()\n\n      this.cleanup()\n    }\n  }\n\n  _willUpdate = () => {\n    this.pendingScrollToIndexCallback?.()\n\n    const scrollElement = this.options.getScrollElement()\n\n    if (this.scrollElement !== scrollElement) {\n      this.cleanup()\n\n      this.scrollElement = scrollElement\n\n      this._scrollToOffset(this.scrollOffset, {\n        adjustments: undefined,\n        behavior: undefined,\n        sync: true,\n      })\n\n      this.unsubs.push(\n        this.options.observeElementRect(this, (rect) => {\n          this.scrollRect = rect\n          this.calculateRange()\n        }),\n      )\n\n      this.unsubs.push(\n        this.options.observeElementOffset(this, (offset) => {\n          if (this.isScrollingTimeoutId !== null) {\n            clearTimeout(this.isScrollingTimeoutId)\n            this.isScrollingTimeoutId = null\n          }\n\n          if (this.scrollOffset !== offset) {\n            this.scrollOffset = offset\n            this.isScrolling = true\n            this.scrollAdjustments = 0\n\n            this.isScrollingTimeoutId = setTimeout(() => {\n              this.isScrollingTimeoutId = null\n              this.isScrolling = false\n\n              this.notify()\n            }, this.options.scrollingDelay)\n          } else {\n            this.isScrolling = false\n            this.scrollAdjustments = 0\n          }\n\n          this.calculateRange()\n        }),\n      )\n    } else if (!this.isScrolling) {\n      this.calculateRange()\n    }\n  }\n\n  private getSize = () => {\n    return this.scrollRect[this.options.horizontal ? 'width' : 'height']\n  }\n\n  private getMeasurements = memo(\n    () => [\n      this.options.count,\n      this.options.paddingStart,\n      this.options.getItemKey,\n      this.itemMeasurementsCache,\n    ],\n    (count, paddingStart, getItemKey, measurementsCache) => {\n      const min =\n        this.pendingMeasuredCacheIndexes.length > 0\n          ? Math.min(...this.pendingMeasuredCacheIndexes)\n          : 0\n      this.pendingMeasuredCacheIndexes = []\n\n      const measurements = this.measurementsCache.slice(0, min)\n\n      for (let i = min; i < count; i++) {\n        const key = getItemKey(i)\n        const measuredSize = measurementsCache[key]\n        const start = measurements[i - 1]\n          ? measurements[i - 1]!.end\n          : paddingStart\n        const size =\n          typeof measuredSize === 'number'\n            ? measuredSize\n            : this.options.estimateSize(i)\n        const end = start + size\n        measurements[i] = { index: i, start, size, end, key }\n      }\n\n      this.measurementsCache = measurements\n      return measurements\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'getMeasurements',\n      debug: () => this.options.debug,\n    },\n  )\n\n  calculateRange = memo(\n    () => [this.getMeasurements(), this.getSize(), this.scrollOffset],\n    (measurements, outerSize, scrollOffset) => {\n      const range = calculateRange({\n        measurements,\n        outerSize,\n        scrollOffset,\n      })\n      if (\n        range.startIndex !== this.range.startIndex ||\n        range.endIndex !== this.range.endIndex\n      ) {\n        this.range = range\n        this.notify()\n      }\n      return this.range\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'calculateRange',\n      debug: () => this.options.debug,\n    },\n  )\n\n  private getIndexes = memo(\n    () => [\n      this.options.rangeExtractor,\n      this.range,\n      this.options.overscan,\n      this.options.count,\n    ],\n    (rangeExtractor, range, overscan, count) => {\n      return rangeExtractor({\n        ...range,\n        overscan,\n        count: count,\n      })\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'getIndexes',\n      debug: () => this.options.debug,\n    },\n  )\n\n  indexFromElement = (node: TItemElement) => {\n    const attributeName = this.options.indexAttribute\n    const indexStr = node.getAttribute(attributeName)\n\n    if (!indexStr) {\n      console.warn(\n        `Missing attribute name '${attributeName}={index}' on measured element.`,\n      )\n      return -1\n    }\n\n    return parseInt(indexStr, 10)\n  }\n\n  private _measureElement = (node: TItemElement, _sync: boolean) => {\n    const index = this.indexFromElement(node)\n\n    const item = this.measurementsCache[index]\n    if (!item) {\n      return\n    }\n\n    const prevNode = this.measureElementCache[item.key]\n\n    const ro = this.getResizeObserver()\n\n    if (!node.isConnected) {\n      if (prevNode) {\n        ro?.unobserve(prevNode)\n        delete this.measureElementCache[item.key]\n      }\n      return\n    }\n\n    if (!prevNode || prevNode !== node) {\n      if (prevNode) {\n        ro?.unobserve(prevNode)\n      }\n      this.measureElementCache[item.key] = node\n      ro?.observe(node)\n    }\n\n    const measuredItemSize = this.options.measureElement(node, this)\n\n    const itemSize = this.itemMeasurementsCache[item.key] ?? item.size\n\n    const delta = measuredItemSize - itemSize\n\n    if (delta !== 0) {\n      if (item.start < this.scrollOffset && this.isScrolling) {\n        if (process.env.NODE_ENV !== 'production' && this.options.debug) {\n          console.info('correction', delta)\n        }\n\n        this._scrollToOffset(this.scrollOffset, {\n          adjustments: (this.scrollAdjustments += delta),\n          behavior: undefined,\n          sync: false,\n        })\n      }\n\n      this.pendingMeasuredCacheIndexes.push(index)\n      this.itemMeasurementsCache = {\n        ...this.itemMeasurementsCache,\n        [item.key]: measuredItemSize,\n      }\n      this.notify()\n    }\n  }\n\n  measureElement = (node: TItemElement | null) => {\n    if (!node) {\n      return\n    }\n\n    this._measureElement(node, true)\n  }\n\n  getVirtualItems = memo(\n    () => [this.getIndexes(), this.getMeasurements()],\n    (indexes, measurements) => {\n      const virtualItems: VirtualItem[] = []\n\n      for (let k = 0, len = indexes.length; k < len; k++) {\n        const i = indexes[k]!\n        const measurement = measurements[i]!\n\n        virtualItems.push(measurement)\n      }\n\n      return virtualItems\n    },\n    {\n      key: process.env.NODE_ENV !== 'production' && 'getIndexes',\n      debug: () => this.options.debug,\n    },\n  )\n\n  scrollToOffset = (\n    toOffset: number,\n    { align = 'start', behavior }: ScrollToOffsetOptions = {},\n  ) => {\n    const offset = this.scrollOffset\n    const size = this.getSize()\n\n    if (align === 'auto') {\n      if (toOffset <= offset) {\n        align = 'start'\n      } else if (toOffset >= offset + size) {\n        align = 'end'\n      } else {\n        align = 'start'\n      }\n    }\n\n    const options = {\n      adjustments: undefined,\n      behavior,\n      sync: false,\n    }\n    if (align === 'start') {\n      this._scrollToOffset(toOffset, options)\n    } else if (align === 'end') {\n      this._scrollToOffset(toOffset - size, options)\n    } else if (align === 'center') {\n      this._scrollToOffset(toOffset - size / 2, options)\n    }\n  }\n\n  scrollToIndex = (\n    index: number,\n    { align = 'auto', ...rest }: ScrollToIndexOptions = {},\n  ) => {\n    this.pendingScrollToIndexCallback = null\n\n    const measurements = this.getMeasurements()\n    const offset = this.scrollOffset\n    const size = this.getSize()\n    const { count } = this.options\n\n    const measurement = measurements[Math.max(0, Math.min(index, count - 1))]\n\n    if (!measurement) {\n      return\n    }\n\n    if (align === 'auto') {\n      if (measurement.end >= offset + size - this.options.scrollPaddingEnd) {\n        align = 'end'\n      } else if (\n        measurement.start <=\n        offset + this.options.scrollPaddingStart\n      ) {\n        align = 'start'\n      } else {\n        return\n      }\n    }\n\n    const toOffset =\n      align === 'end'\n        ? measurement.end + this.options.scrollPaddingEnd\n        : measurement.start - this.options.scrollPaddingStart\n\n    this.scrollToOffset(toOffset, { align, ...rest })\n\n    const isDynamic = Object.keys(this.measureElementCache).length > 0\n\n    if (isDynamic) {\n      const didSeen = () =>\n        typeof this.itemMeasurementsCache[this.options.getItemKey(index)] ===\n        'number'\n\n      if (!didSeen()) {\n        this.pendingScrollToIndexCallback = () => {\n          if (didSeen()) {\n            this.pendingScrollToIndexCallback = null\n            this.scrollToIndex(index, { align, ...rest })\n          }\n        }\n      }\n    }\n  }\n\n  getTotalSize = () =>\n    (this.getMeasurements()[this.options.count - 1]?.end ||\n      this.options.paddingStart) + this.options.paddingEnd\n\n  private _scrollToOffset = (\n    offset: number,\n    {\n      adjustments,\n      behavior,\n      sync,\n    }: {\n      adjustments: number | undefined\n      behavior: ScrollBehavior | undefined\n      sync: boolean\n    },\n  ) => {\n    this.options.scrollToFn(offset, { behavior, sync, adjustments }, this)\n  }\n\n  measure = () => {\n    this.itemMeasurementsCache = {}\n    this.notify()\n  }\n}\n\nconst findNearestBinarySearch = (\n  low: number,\n  high: number,\n  getCurrentValue: (i: number) => number,\n  value: number,\n) => {\n  while (low <= high) {\n    const middle = ((low + high) / 2) | 0\n    const currentValue = getCurrentValue(middle)\n\n    if (currentValue < value) {\n      low = middle + 1\n    } else if (currentValue > value) {\n      high = middle - 1\n    } else {\n      return middle\n    }\n  }\n\n  if (low > 0) {\n    return low - 1\n  } else {\n    return 0\n  }\n}\n\nfunction calculateRange({\n  measurements,\n  outerSize,\n  scrollOffset,\n}: {\n  measurements: VirtualItem[]\n  outerSize: number\n  scrollOffset: number\n}) {\n  const count = measurements.length - 1\n  const getOffset = (index: number) => measurements[index]!.start\n\n  const startIndex = findNearestBinarySearch(0, count, getOffset, scrollOffset)\n  let endIndex = startIndex\n\n  while (\n    endIndex < count &&\n    measurements[endIndex]!.end < scrollOffset + outerSize\n  ) {\n    endIndex++\n  }\n\n  return { startIndex, endIndex }\n}\n"],"names":["memo","getDeps","fn","opts","deps","result","depTime","key","debug","Date","now","newDeps","depsChanged","length","some","dep","index","resultTime","onChange","depEndTime","Math","round","resultEndTime","resultFpsPercentage","pad","str","num","String","console","info","max","min","defaultKeyExtractor","defaultRangeExtractor","range","start","startIndex","overscan","end","endIndex","count","arr","i","push","memoRectCallback","instance","cb","prev","height","width","rect","options","horizontal","observeElementRect","observer","ResizeObserver","entries","contentRect","scrollElement","getBoundingClientRect","observe","unobserve","observeWindowRect","memoizedCallback","onResize","innerWidth","innerHeight","addEventListener","capture","passive","removeEventListener","scrollProps","element","window","createOffsetObserver","mode","propX","propY","prevX","prevY","scroll","offset","scrollMargin","onScroll","e","target","currentTarget","scrollX","scrollY","observeElementOffset","observeWindowOffset","measureElement","windowScroll","adjustments","behavior","sync","toOffset","scrollTo","elementScroll","Virtualizer","constructor","unsubs","isScrolling","isScrollingTimeoutId","measurementsCache","itemMeasurementsCache","pendingMeasuredCacheIndexes","scrollAdjustments","measureElementCache","pendingScrollToIndexCallback","getResizeObserver","_ro","forEach","entry","_measureElement","setOptions","Object","value","initialOffset","paddingStart","paddingEnd","scrollPaddingStart","scrollPaddingEnd","getItemKey","rangeExtractor","initialRect","scrollingDelay","indexAttribute","notify","cleanup","filter","Boolean","d","_didMount","ro","values","node","disconnect","_willUpdate","getScrollElement","_scrollToOffset","scrollOffset","undefined","scrollRect","calculateRange","clearTimeout","setTimeout","getSize","getMeasurements","measurements","slice","measuredSize","size","estimateSize","outerSize","getIndexes","indexFromElement","attributeName","indexStr","getAttribute","warn","parseInt","_sync","item","prevNode","isConnected","measuredItemSize","itemSize","delta","getVirtualItems","indexes","virtualItems","k","len","measurement","scrollToOffset","align","scrollToIndex","rest","isDynamic","keys","didSeen","getTotalSize","scrollToFn","measure","findNearestBinarySearch","low","high","getCurrentValue","middle","currentValue","getOffset"],"mappings":"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"}