{"version":3,"file":"PaneItem-59fdbcf0.js","sources":["../../src/desk/components/MissingSchemaType.tsx","../../src/desk/components/paneItem/PaneItem.tsx"],"sourcesContent":["import {WarningOutlineIcon} from '@sanity/icons'\nimport {SanityDocument} from '@sanity/types'\nimport React from 'react'\nimport {GeneralPreviewLayoutKey, SanityDefaultPreview} from 'sanity'\n\nexport interface MissingSchemaTypeProps {\n  layout?: GeneralPreviewLayoutKey\n  value: SanityDocument\n}\n\nconst getUnknownTypeFallback = (id: string, typeName: string) => ({\n  title: (\n    <em>\n      No schema found for type <code>{typeName}</code>\n    </em>\n  ),\n  subtitle: (\n    <em>\n      Document: <code>{id}</code>\n    </em>\n  ),\n  media: () => <WarningOutlineIcon />,\n})\n\nexport function MissingSchemaType(props: MissingSchemaTypeProps) {\n  const {layout, value} = props\n\n  return (\n    <SanityDefaultPreview {...getUnknownTypeFallback(value._id, value._type)} layout={layout} />\n  )\n}\n","import {FolderIcon, ChevronRightIcon, DocumentIcon} from '@sanity/icons'\nimport {isSanityDocument, PreviewValue, SanityDocument, SchemaType} from '@sanity/types'\nimport {Text} from '@sanity/ui'\nimport React, {ReactNode, useCallback, useEffect, useMemo, useState} from 'react'\nimport {MissingSchemaType} from '../MissingSchemaType'\nimport {usePaneRouter} from '../paneRouter'\nimport {PaneItemPreview} from './PaneItemPreview'\nimport {\n  FIXME,\n  GeneralPreviewLayoutKey,\n  PreviewCard,\n  SanityDefaultPreview,\n  useDocumentPresence,\n  useDocumentPreviewStore,\n  useSchema,\n} from 'sanity'\n\ninterface PaneItemProps {\n  id: string\n  layout?: GeneralPreviewLayoutKey\n  icon?: React.ComponentType<any> | false\n  pressed?: boolean\n  selected?: boolean\n  title?: string\n  value?: PreviewValue | SanityDocument\n  schemaType?: SchemaType\n}\n\n/**\n * Return `false` if we explicitly disable the icon.\n * Otherwise return the passed icon or the schema type icon as a backup.\n */\nexport function getIconWithFallback(\n  icon: React.ComponentType<any> | false | undefined,\n  schemaType: SchemaType | undefined,\n  defaultIcon: React.ComponentType<any>\n): React.ComponentType<any> | false {\n  if (icon === false) {\n    return false\n  }\n\n  return icon || (schemaType && schemaType.icon) || defaultIcon || false\n}\n\nexport function PaneItem(props: PaneItemProps) {\n  const {icon, id, layout = 'default', pressed, schemaType, selected, title, value} = props\n  const schema = useSchema()\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {ChildLink} = usePaneRouter()\n  const documentPresence = useDocumentPresence(id)\n  const hasSchemaType = Boolean(schemaType && schemaType.name && schema.get(schemaType.name))\n  const [clicked, setClicked] = useState<boolean>(false)\n\n  const preview = useMemo(() => {\n    if (value && isSanityDocument(value)) {\n      if (!schemaType || !hasSchemaType) {\n        return <MissingSchemaType value={value} />\n      }\n\n      return (\n        <PaneItemPreview\n          documentPreviewStore={documentPreviewStore}\n          icon={getIconWithFallback(icon, schemaType, DocumentIcon)}\n          layout={layout}\n          schemaType={schemaType}\n          value={value}\n          presence={documentPresence}\n        />\n      )\n    }\n\n    return (\n      <SanityDefaultPreview\n        status={\n          <Text muted>\n            <ChevronRightIcon />\n          </Text>\n        }\n        icon={getIconWithFallback(icon, schemaType, FolderIcon)}\n        layout={layout}\n        title={title}\n      />\n    )\n  }, [\n    documentPreviewStore,\n    hasSchemaType,\n    icon,\n    layout,\n    schemaType,\n    title,\n    value,\n    documentPresence,\n  ])\n\n  const Link = useMemo(\n    () =>\n      function LinkComponent(linkProps: {children: ReactNode}) {\n        return <ChildLink {...linkProps} childId={id} />\n      },\n    [ChildLink, id]\n  )\n\n  const handleClick = useCallback(() => setClicked(true), [])\n\n  // Reset `clicked` state when `selected` prop changes\n  useEffect(() => setClicked(false), [selected])\n\n  return (\n    <PreviewCard\n      __unstable_focusRing\n      as={Link as FIXME}\n      data-as=\"a\"\n      data-ui=\"PaneItem\"\n      padding={2}\n      radius={2}\n      onClick={handleClick}\n      pressed={pressed}\n      selected={selected || clicked}\n      tone=\"inherit\"\n    >\n      {preview}\n    </PreviewCard>\n  )\n}\n"],"names":["getUnknownTypeFallback","id","typeName","title","children","jsx","subtitle","media","WarningOutlineIcon","MissingSchemaType","props","layout","value","SanityDefaultPreview","_id","_type","getIconWithFallback","icon","schemaType","defaultIcon","PaneItem","pressed","selected","schema","useSchema","documentPreviewStore","useDocumentPreviewStore","ChildLink","usePaneRouter","documentPresence","useDocumentPresence","hasSchemaType","Boolean","name","get","clicked","setClicked","useState","preview","useMemo","isSanityDocument","PaneItemPreview","DocumentIcon","presence","status","Text","muted","ChevronRightIcon","FolderIcon","Link","LinkComponent","linkProps","childId","handleClick","useCallback","useEffect","PreviewCard","__unstable_focusRing","as","padding","radius","onClick","tone"],"mappings":"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"}